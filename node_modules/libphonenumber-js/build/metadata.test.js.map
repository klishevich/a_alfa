{"version":3,"sources":["../source/metadata.test.js"],"names":["describe","it","FR","country","console","log","type","should","equal","thrower","throw","something"],"mappings":";;;;;;AAAA;;;;AAEA;;;;;;AAEAA,SAAS,UAAT,EAAqB,YACrB;AACCC,IAAG,+CAAH,EAAoD,YACpD;AACC,MAAMC,KAAK,2CAAuBC,OAAvB,CAA+B,IAA/B,CAAX;AACAC,UAAQC,GAAR,CAAYH,GAAGI,IAAH,CAAQ,YAAR,CAAZ;AACAA,OAAKJ,GAAGI,IAAH,CAAQ,YAAR,CAAL,EAA4BC,MAA5B,CAAmCC,KAAnC,CAAyC,WAAzC;AACA,EALD;;AAOAP,IAAG,yBAAH,EAA8B,YAC9B;AACC,MAAMQ,UAAU,SAAVA,OAAU;AAAA,UAAM,2CAAuBN,OAAvB,CAA+B,KAA/B,CAAN;AAAA,GAAhB;AACAM,UAAQF,MAAR,CAAeG,KAAf,CAAqB,iBAArB;AACA,EAJD;AAKA,CAdD;;AAgBA,SAASJ,IAAT,CAAcK,SAAd,EACA;AACC,eAAcA,SAAd,uDAAcA,SAAd;AACA","file":"metadata.test.js","sourcesContent":["import metadata from '../metadata.min'\r\n\r\nimport Metadata from '../source/metadata'\r\n\r\ndescribe('metadata', () =>\r\n{\r\n\tit('should return undefined for non-defined types', function()\r\n\t{\r\n\t\tconst FR = new Metadata(metadata).country('FR')\r\n\t\tconsole.log(FR.type('FIXED_LINE'))\r\n\t\ttype(FR.type('FIXED_LINE')).should.equal('undefined')\r\n\t})\r\n\r\n\tit('should validate country', function()\r\n\t{\r\n\t\tconst thrower = () => new Metadata(metadata).country('RUS')\r\n\t\tthrower.should.throw('Unknown country')\r\n\t})\r\n})\r\n\r\nfunction type(something)\r\n{\r\n\treturn typeof something\r\n}"]}