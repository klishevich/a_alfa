{"version":3,"sources":["../source/validate.test.js"],"names":["is_valid_number","parameters","push","apply","describe","it","should","equal","undefined","country","phone","countries","DE","thrower","throw"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,SAASA,eAAT,GACA;AAAA,oCAD4BC,UAC5B;AAD4BA,cAC5B;AAAA;;AACCA,aAAWC,IAAX;AACA,SAAO,mBAASC,KAAT,CAAe,IAAf,EAAqBF,UAArB,CAAP;AACA;;AAEDG,SAAS,UAAT,EAAqB,YACrB;AACCC,KAAG,+BAAH,EAAoC,YACpC;AACCL,oBAAgB,iBAAhB,EAAmCM,MAAnC,CAA0CC,KAA1C,CAAgD,IAAhD;AACAP,oBAAgB,YAAhB,EAA8BM,MAA9B,CAAqCC,KAArC,CAA2C,KAA3C;;AAEAP,oBAAgB,iBAAhB,EAAmCQ,SAAnC,EAA8CF,MAA9C,CAAqDC,KAArD,CAA2D,IAA3D;;AAEAP,oBAAgB,gBAAhB,EAAkC,IAAlC,EAAwCM,MAAxC,CAA+CC,KAA/C,CAAqD,IAArD;AACAP,oBAAgB,UAAhB,EAA4B,IAA5B,EAAkCM,MAAlC,CAAyCC,KAAzC,CAA+C,KAA/C;;AAEAP,oBAAgB,EAAES,SAAS,IAAX,EAAiBC,OAAO,YAAxB,EAAhB,EAAwDJ,MAAxD,CAA+DC,KAA/D,CAAqE,IAArE;AACA,GAXD;;AAaAF,KAAG,kGAAH,EAAuG,YACvG;AACC;AACAL,oBAAgB,QAAhB,EAA0B,IAA1B,EAAgCM,MAAhC,CAAuCC,KAAvC,CAA6C,IAA7C;AACAP,oBAAgB,SAAhB,EAA2B,IAA3B,EAAiCM,MAAjC,CAAwCC,KAAxC,CAA8C,IAA9C;;AAEA;AACA;AACA,uBAASI,SAAT,CAAmBC,EAAnB,CAAsB,EAAtB,IACA,CACO,CAAC,+NAAD,CADP,EAEO,CAAC,kEAAD,CAFP,EAGO,CAAC,cAAD,CAHP,EAIO,CAAC,2CAAD,CAJP,EAKO,CAAC,WAAD,CALP,EAMO,CAAC,uIAAD,CANP,EAOO,CAAC,8BAAD,CAPP,EAQO,CAAC,gCAAD,CARP,CADA;;AAYA;AACAZ,oBAAgB,QAAhB,EAA0B,IAA1B,EAAgCM,MAAhC,CAAuCC,KAAvC,CAA6C,KAA7C;AACAP,oBAAgB,SAAhB,EAA2B,IAA3B,EAAiCM,MAAjC,CAAwCC,KAAxC,CAA8C,KAA9C;;AAEA;AACA;AACA;AACA;AACAP,oBAAgB,WAAhB,EAA6B,IAA7B,EAAmCM,MAAnC,CAA0CC,KAA1C,CAAgD,IAAhD;AACA,GA7BD;;AA+BAF,KAAG,2BAAH,EAAgC,YAChC;AACC;AACA,QAAIQ,UAAU;AAAA,aAAM,wBAAS,cAAT,CAAN;AAAA,KAAd;AACAA,YAAQP,MAAR,CAAeQ,KAAf,CAAqB,sBAArB;;AAEA;AACAd,oBAAgB,aAAhB,EAA+BM,MAA/B,CAAsCC,KAAtC,CAA4C,KAA5C;AACAP,oBAAgB,cAAhB,EAAgC,IAAhC,EAAsCM,MAAtC,CAA6CC,KAA7C,CAAmD,KAAnD;;AAEA;AACAM,cAAU;AAAA,aAAMb,gBAAgB,WAAhB,EAA6B,IAA7B,CAAN;AAAA,KAAV;AACAa,YAAQP,MAAR,CAAeQ,KAAf,CAAqB,oFAArB;;AAEA;AACAd,oBAAgB,aAAhB,EAA+BM,MAA/B,CAAsCC,KAAtC,CAA4C,IAA5C;;AAEA;AACAM,cAAU;AAAA,aAAMb,gBAAgB,EAAEU,OAAO,YAAT,EAAuBD,SAAS,KAAhC,EAAhB,CAAN;AAAA,KAAV;AACAI,YAAQP,MAAR,CAAeQ,KAAf,CAAqB,iBAArB;AACA,GApBD;;AAsBAT,KAAG,uCAAH,EAA4C,YAC5C;AACC;AACAL,oBAAgB,uBAAhB,EAAyCM,MAAzC,CAAgDC,KAAhD,CAAsD,IAAtD;AACA;AACAP,oBAAgB,kBAAhB,EAAoC,IAApC,EAA0CM,MAA1C,CAAiDC,KAAjD,CAAuD,IAAvD;AACA,GAND;AAOA,CA3ED","file":"validate.test.js","sourcesContent":["import metadata from '../metadata.min'\r\nimport validate from '../source/validate'\r\n\r\nfunction is_valid_number(...parameters)\r\n{\r\n\tparameters.push(metadata)\r\n\treturn validate.apply(this, parameters)\r\n}\r\n\r\ndescribe('validate', () =>\r\n{\r\n\tit('should validate phone numbers', function()\r\n\t{\r\n\t\tis_valid_number('+1-213-373-4253').should.equal(true)\r\n\t\tis_valid_number('+1-213-373').should.equal(false)\r\n\r\n\t\tis_valid_number('+1-213-373-4253', undefined).should.equal(true)\r\n\r\n\t\tis_valid_number('(213) 373-4253', 'US').should.equal(true)\r\n\t\tis_valid_number('(213) 37', 'US').should.equal(false)\r\n\r\n\t\tis_valid_number({ country: 'US', phone: '2133734253' }).should.equal(true)\r\n\t})\r\n\r\n\tit('should refine phone number validation in case extended regular expressions are set for a country', () =>\r\n\t{\r\n\t\t// Germany general validation must pass\r\n\t\tis_valid_number('123456', 'DE').should.equal(true)\r\n\t\tis_valid_number('0123456', 'DE').should.equal(true)\r\n\r\n\t\t// Extra regular expressions for precise national number validation.\r\n\t\t// `types` index in compressed array is `9`\r\n\t\tmetadata.countries.DE[10] =\r\n\t\t[\r\n         [\"[246]\\\\d{5,13}|3(?:0\\\\d{3,13}|2\\\\d{9}|[3-9]\\\\d{4,13})|5(?:0[2-8]|[1256]\\\\d|[38][0-8]|4\\\\d{0,2}|[79][0-7])\\\\d{3,11}|7(?:0[2-8]|[1-9]\\\\d)\\\\d{3,10}|8(?:0[2-9]|[1-9]\\\\d)\\\\d{3,10}|9(?:0[6-9]\\\\d{3,10}|1\\\\d{4,12}|[2-9]\\\\d{4,11})\"],\r\n         [\"1(?:5[0-25-9]\\\\d{8}|6[023]\\\\d{7,8}|7(?:[0-57-9]\\\\d?|6\\\\d)\\\\d{7})\"],\r\n         [\"800\\\\d{7,12}\"],\r\n         [\"137[7-9]\\\\d{6}|900(?:[135]\\\\d{6}|9\\\\d{7})\"],\r\n         [\"700\\\\d{8}\"],\r\n         [\"1(?:5(?:(?:2\\\\d55|7\\\\d99|9\\\\d33)\\\\d{7}|(?:[034568]00|113)\\\\d{8})|6(?:013|255|399)\\\\d{7,8}|7(?:[015]13|[234]55|[69]33|[78]99)\\\\d{7,8})\"],\r\n         [\"18(?:1\\\\d{5,11}|[2-9]\\\\d{8})\"],\r\n         [\"16(?:4\\\\d{1,10}|[89]\\\\d{1,11})\"]\r\n      ]\r\n\r\n\t\t// Germany extended validation must not pass for an invalid phone number\r\n\t\tis_valid_number('123456', 'DE').should.equal(false)\r\n\t\tis_valid_number('0123456', 'DE').should.equal(false)\r\n\r\n\t\t// // Germany extended validation must pass for a valid phone number,\r\n\t\t// // but still must demand the national prefix (`0`).\r\n\t\t// // https://github.com/catamphetamine/libphonenumber-js/issues/6\r\n\t\t// is_valid_number('30123456', 'DE').should.equal(false)\r\n\t\tis_valid_number('030123456', 'DE').should.equal(true)\r\n\t})\r\n\r\n\tit('should work in edge cases', function()\r\n\t{\r\n\t\t// No metadata\r\n\t\tlet thrower = () => validate('+78005553535')\r\n\t\tthrower.should.throw('Metadata is required')\r\n\r\n\t\t// Non-phone-number characters in a phone number\r\n\t\tis_valid_number('+499821958a').should.equal(false)\r\n\t\tis_valid_number('88005553535x', 'RU').should.equal(false)\r\n\r\n\t\t// Numerical `value`\r\n\t\tthrower = () => is_valid_number(88005553535, 'RU')\r\n\t\tthrower.should.throw('A phone number must either be a string or an object of shape { phone, [country] }.')\r\n\r\n\t\t// Long country phone code\r\n\t\tis_valid_number('+3725555555').should.equal(true)\r\n\r\n\t\t// Invalid country\r\n\t\tthrower = () => is_valid_number({ phone: '8005553535', country: 'RUS' })\r\n\t\tthrower.should.throw('Unknown country')\r\n\t})\r\n\r\n\tit('should accept phone number extensions', function()\r\n\t{\r\n\t\t// International\r\n\t\tis_valid_number('+12133734253 ext. 123').should.equal(true)\r\n\t\t// National\r\n\t\tis_valid_number('88005553535 x123', 'RU').should.equal(true)\r\n\t})\r\n})"]}