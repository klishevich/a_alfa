{"version":3,"sources":["render-in-container/render-in-container.jsx"],"names":["RenderInContainer","componentDidMount","buildElements","renderLayer","componentDidUpdate","container","getContainer","componentWillUnmount","unmountComponentAtNode","element","removeChild","render","props","className","toString","unstable_renderSubtreeIntoContainer","children","handleRender","onRender","getNode","document","body","createElement","appendChild","Component","propTypes","oneOfType","arrayOf","node","string","func"],"mappings":";;;;0CAAA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;IAMMA,iB,WADL,mCAAW,gCAAX,C;;;;;;;;;gCAaGC,iB,gCAAoB;AAChB,aAAKC,aAAL;AACA,aAAKC,WAAL;AACH,K;;gCAEDC,kB,iCAAqB;AACjB,YAAI,KAAKC,SAAL,KAAmB,KAAKC,YAAL,EAAvB,EAA4C;AACxC,iBAAKJ,aAAL;AACH;AACD,aAAKC,WAAL;AACH,K;;gCAEDI,oB,mCAAuB;AACnB,2BAASC,sBAAT,CAAgC,KAAKC,OAArC;AACA,aAAKJ,SAAL,CAAeK,WAAf,CAA2B,KAAKD,OAAhC;AACH,K;;gCAEDE,M,qBAAS;AACL,eAAO,KAAP;AACH,K;;gCAEDR,W,0BAAc;AACV,YAAI,KAAKS,KAAL,CAAWC,SAAf,EAA0B;AACtB,iBAAKJ,OAAL,CAAaI,SAAb,GAAyB,KAAKD,KAAL,CAAWC,SAAX,CAAqBC,QAArB,EAAzB;AACH;;AAED,2BAASC,mCAAT,CACI,IADJ,EAEI,KAAKH,KAAL,CAAWI,QAFf,EAGI,KAAKP,OAHT,EAII,KAAKQ,YAJT;AAMH,K;;gCAGDA,Y,2BAAe;AACX,YAAI,KAAKL,KAAL,CAAWM,QAAf,EAAyB;AACrB,iBAAKN,KAAL,CAAWM,QAAX;AACH;AACJ,K;;AAED;;;;;;;;gCAMAC,O,sBAAU;AACN,eAAO,KAAKV,OAAZ;AACH,K;;AAED;;;;;;;;gCAMAH,Y,2BAAe;AACX,eAAO,KAAKM,KAAL,CAAWP,SAAX,IAAwBe,SAASC,IAAxC;AACH,K;;gCAEDnB,a,4BAAgB;AACZ,YAAI,KAAKO,OAAL,IAAgB,KAAKJ,SAAzB,EAAoC;AAChC,+BAASG,sBAAT,CAAgC,KAAKC,OAArC;AACA,iBAAKJ,SAAL,CAAeK,WAAf,CAA2B,KAAKD,OAAhC;AACH;;AAED,aAAKJ,SAAL,GAAiB,KAAKC,YAAL,EAAjB;AACA,aAAKG,OAAL,GAAeW,SAASE,aAAT,CAAuB,KAAvB,CAAf;;AAEA,aAAKjB,SAAL,CAAekB,WAAf,CAA2B,KAAKd,OAAhC;AACH,K;;;EAnF2B,gBAAMe,S;AAAhCxB,iB,CACKyB,S,2CAAY;AACf;AACAT,cAAU,oBAAKU,SAAL,CAAe,CAAC,oBAAKC,OAAL,CAAa,oBAAKC,IAAlB,CAAD,EAA0B,oBAAKA,IAA/B,CAAf,CAFK;AAGf;AACAf,eAAW,oBAAKgB,MAJD;AAKf;AACAxB,sCANe;AAOf;AACAa,cAAU,oBAAKY;AARA,C;kBAqFR9B,iB","file":"render-in-container.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport deprecated from 'deprecated-decorator';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Type from 'prop-types';\n\nimport { HtmlElement } from '../lib/prop-types';\n\n/**\n * @deprecated since v11.0.0\n *\n * Компонент, позволяющий визуализировать другие компоненты в произвольном контейнере.\n */\n@deprecated('ReactDOM v16 with createPortal')\nclass RenderInContainer extends React.Component {\n    static propTypes = {\n        /** Дочерние элементы контейнера */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Контейнер, в котором будет визуализирован компонент */\n        container: HtmlElement,\n        /** Callback на рендер компонента */\n        onRender: Type.func\n    };\n\n    componentDidMount() {\n        this.buildElements();\n        this.renderLayer();\n    }\n\n    componentDidUpdate() {\n        if (this.container !== this.getContainer()) {\n            this.buildElements();\n        }\n        this.renderLayer();\n    }\n\n    componentWillUnmount() {\n        ReactDOM.unmountComponentAtNode(this.element);\n        this.container.removeChild(this.element);\n    }\n\n    render() {\n        return false;\n    }\n\n    renderLayer() {\n        if (this.props.className) {\n            this.element.className = this.props.className.toString();\n        }\n\n        ReactDOM.unstable_renderSubtreeIntoContainer(\n            this,\n            this.props.children,\n            this.element,\n            this.handleRender\n        );\n    }\n\n    @autobind\n    handleRender() {\n        if (this.props.onRender) {\n            this.props.onRender();\n        }\n    }\n\n    /**\n     * Возвращает HTMLElement враппера компонента.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getNode() {\n        return this.element;\n    }\n\n    /**\n     * Возвращает HTMLElement контейнера, в который отрендерился компонент.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getContainer() {\n        return this.props.container || document.body;\n    }\n\n    buildElements() {\n        if (this.element && this.container) {\n            ReactDOM.unmountComponentAtNode(this.element);\n            this.container.removeChild(this.element);\n        }\n\n        this.container = this.getContainer();\n        this.element = document.createElement('div');\n\n        this.container.appendChild(this.element);\n    }\n}\n\nexport default RenderInContainer;\n"]}