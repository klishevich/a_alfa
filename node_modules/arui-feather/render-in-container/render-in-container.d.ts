
import { Component, ReactNode } from 'react';

export type RenderInContainerChildrenFieldType = ReactNode[] | ReactNode;


export interface RenderInContainerProps {

    /**
     * Дочерние элементы контейнера
     */
    children?: RenderInContainerChildrenFieldType;
    /**
     * Дополнительный класс
     */
    className?: string;
    /**
     * Контейнер, в котором будет визуализирован компонент
     */
    container?: any/* Не нашёлся встроенный тип для типа {"name":"custom","raw":"HtmlElement"}
                  * https://github.com/alfa-laboratory/library-utils/issues/new
                  */;
    /**
     * Callback на рендер компонента
     */
    onRender?: Function;
}



/**
 * @deprecated since v11.0.0

Компонент, позволяющий визуализировать другие компоненты в произвольном контейнере.
 */

export default class RenderInContainer extends Component<RenderInContainerProps, any> {

    /**
     * Возвращает HTMLElement враппера компонента.
     */
    getNode(): any;
    /**
     * Возвращает HTMLElement контейнера, в который отрендерился компонент.
     */
    getContainer(): any;
}
