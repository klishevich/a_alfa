{"version":3,"sources":["label/label.jsx"],"names":["Label","render","cn","size","props","isNoWrap","id","children","Component","defaultProps","propTypes","oneOf","oneOfType","arrayOf","node","theme","className","string","bool"],"mappings":";;;;yCAAA;;;;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;AAEA;;;IAKMA,K,WAFL,kBAAG,OAAH,C,UACA,4B;;;;;;;;;oBAsBGC,M,mBAAOC,E,EAAI;AACP,eACI;AAAA;AAAA;AACI,2BAAYA,GAAG;AACXC,0BAAM,KAAKC,KAAL,CAAWD,IADN;AAEX,+BAAW,KAAKC,KAAL,CAAWC;AAFX,iBAAH,CADhB;AAKI,oBAAK,KAAKD,KAAL,CAAWE;AALpB;AAOI;AAAA;AAAA,kBAAM,WAAYJ,GAAG,OAAH,CAAlB;AACM,qBAAKE,KAAL,CAAWG;AADjB;AAPJ,SADJ;AAaH,K;;;EAnCe,gBAAMC,S,WAgBfC,Y,GAAe;AAClBN,UAAM,GADY;AAElBE,cAAU;AAFQ,C;AAhBpBL,K,CACKU,S,2CAAY;AACf;AACAP,UAAM,oBAAKQ,KAAL,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAX,CAFS;AAGf;AACAJ,cAAU,oBAAKK,SAAL,CAAe,CAAC,oBAAKC,OAAL,CAAa,oBAAKC,IAAlB,CAAD,EAA0B,oBAAKA,IAA/B,CAAf,CAJK;AAKf;AACAC,WAAO,oBAAKJ,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CANQ;AAOf;AACAK,eAAW,oBAAKC,MARD;AASf;AACAX,QAAI,oBAAKW,MAVM;AAWf;AACAZ,cAAU,oBAAKa;AAZA,C;kBAqCRlB,K","file":"label.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонента лейбла.\n */\n@cn('label')\n@performance()\nclass Label extends React.Component {\n    static propTypes = {\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Дочерние элементы `Label` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Управление возможностью рендерить компонент в одну сроку */\n        isNoWrap: Type.bool\n    };\n\n    static defaultProps = {\n        size: 'm',\n        isNoWrap: false\n    };\n\n    render(cn) {\n        return (\n            <span\n                className={ cn({\n                    size: this.props.size,\n                    'no-wrap': this.props.isNoWrap\n                }) }\n                id={ this.props.id }\n            >\n                <span className={ cn('inner') }>\n                    { this.props.children }\n                </span>\n            </span>\n        );\n    }\n}\n\nexport default Label;\n"]}