{"version":3,"sources":["button/button.jsx"],"names":["Button","state","focused","hovered","pressed","componentWillReceiveProps","nextProps","disabled","setState","render","cn","buttonElement","props","tag","isButton","buttonProps","ref","control","role","id","name","type","title","tabIndex","formNoValidate","className","pseudo","view","size","width","undefined","togglable","checked","onClick","handleClick","onFocus","handleFocus","onBlur","handleBlur","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseOut","handleMouseOut","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","buttonContent","leftAddons","icon","children","text","rightAddons","createElement","event","which","ENTER","SPACE","getNode","focus","blur","document","activeElement","Component","defaultProps","propTypes","node","oneOf","bool","string","number","oneOfType","arrayOf","theme","func"],"mappings":"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","file":"button.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport keyboardCode from '../lib/keyboard-code';\nimport { deprecated } from '../lib/prop-types';\nimport performance from '../performance';\n\n/**\n * Компонент кнопки (да, она нажимается!).\n */\n@cn('button')\n@performance()\nclass Button extends React.Component {\n    static propTypes = {\n        /** Текст кнопки */\n        text: Type.node,\n        /** Иконка кнопки */\n        icon: Type.node,\n        /** Список произвольных элементов в левом слоте */\n        rightAddons: Type.node,\n        /** Список произвольных элементов в правом слоте */\n        leftAddons: Type.node,\n        /** Тип кнопки */\n        view: Type.oneOf(['default', 'action', 'extra']),\n        /** Поведение кнопки */\n        type: Type.oneOf(['button', 'reset', 'submit']),\n        /** HTML элемент, которым будет компонент в DOM */\n        tag: Type.oneOf(['button', 'span']),\n        /** Управление шириной кнопки. При значении 'available' растягивает кнопку на ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Управление возможности взаимодействия с компонентом */\n        disabled: Type.bool,\n        /** Отображение кнопки в состоянии фокуса */\n        focused: Type.bool,\n        /** Псевдо представление кнопки */\n        pseudo: deprecated(Type.bool, 'Pseudo buttons are deprecated, remove this prop'),\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Отключает валидацию полей формы, у которых есть атрибут pattern */\n        formNoValidate: Type.bool,\n        /** Имя компонента в DOM */\n        name: Type.string,\n        /** Текст всплывающей подсказки */\n        title: Type.string,\n        /** Последовательность перехода между контролами при нажатии на Tab */\n        tabIndex: Type.number,\n        /** Тип переключателя */\n        togglable: Type.oneOf(['check', 'radio']),\n        /** Отображение кнопки в отмеченном (зажатом) состоянии */\n        checked: Type.bool,\n        /** Дочерние элементы `Button` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Обработчик клика по кнопке */\n        onClick: Type.func,\n        /** Обработчик фокуса кнопки */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса кнопки */\n        onBlur: Type.func,\n        /** Обработчик события наведения курсора на кнопку */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с кнопки */\n        onMouseLeave: Type.func,\n        /** Обработчик события нажатия кнопки мыши в момент */\n        onMouseDown: Type.func,\n        /** Обработчик события отжатия кнопки мыши в момент */\n        onMouseUp: Type.func,\n        /** Обработчик события отведения курсора с кнопки */\n        onMouseOut: Type.func,\n        /** Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте */\n        onKeyDown: Type.func,\n        /** Обработчик события отжатия на клавишу клавиатуры в момент, когда фокус находится на компоненте */\n        onKeyUp: Type.func\n    };\n\n    static defaultProps = {\n        type: 'button',\n        tag: 'button',\n        size: 'm',\n        formNoValidate: false\n    };\n\n    state = {\n        focused: false,\n        hovered: false,\n        pressed: false\n    };\n\n    /**\n     * @type {HTMLButtonElement|HTMLSpanElement}\n     */\n    control;\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.disabled) {\n            this.setState({\n                hovered: false,\n                focused: false\n            });\n        }\n    }\n\n    render(cn) {\n        let buttonElement = this.props.tag === 'span' ? 'span' : 'button';\n        const isButton = buttonElement === 'button';\n\n        let buttonProps = {\n            ref: (control) => { this.control = control; },\n            role: 'button',\n            id: this.props.id,\n            name: this.props.name,\n            type: this.props.type,\n            title: this.props.title,\n            tabIndex: this.props.disabled ? '-1' : this.props.tabIndex,\n            disabled: this.props.disabled,\n            formNoValidate: isButton ? this.props.formNoValidate : null,\n            className: cn({\n                disabled: this.props.disabled,\n                pseudo: this.props.pseudo,\n                view: this.props.view,\n                size: this.props.size,\n                width: this.props.width,\n                focused: this.props.focused !== undefined ? this.props.focused : this.state.focused,\n                hovered: this.state.hovered,\n                pressed: this.state.pressed,\n                togglable: this.props.togglable,\n                checked: this.props.checked\n            }),\n            onClick: this.handleClick,\n            onFocus: this.handleFocus,\n            onBlur: this.handleBlur,\n            onMouseEnter: this.handleMouseEnter,\n            onMouseLeave: this.handleMouseLeave,\n            onMouseDown: this.handleMouseDown,\n            onMouseUp: this.handleMouseUp,\n            onMouseOut: this.handleMouseOut,\n            onKeyDown: this.handleKeyDown,\n            onKeyUp: this.handleKeyUp\n        };\n\n        let buttonContent = [\n            this.props.leftAddons &&\n                <span key='left-addons'>\n                    { this.props.leftAddons }\n                </span>,\n            this.props.icon &&\n                <span key='icon' className={ cn('icon') }>\n                    { this.props.icon }\n                </span>,\n            (this.props.children || this.props.text) &&\n                <span key='text' className={ cn('text') }>\n                    { this.props.children || this.props.text }\n                </span>,\n            this.props.rightAddons &&\n                <span key='right-addons'>\n                    { this.props.rightAddons }\n                </span>\n        ];\n\n        return React.createElement(buttonElement,\n            buttonProps,\n            buttonContent\n        );\n    }\n\n    @autobind\n    handleClick(event) {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        if (this.state.pressed) return;\n\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    @autobind\n    handleMouseEnter(event) {\n        if (!this.props.disabled) {\n            this.setState({ hovered: true });\n        }\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    }\n\n    @autobind\n    handleMouseLeave(event) {\n        if (!this.props.disabled) {\n            this.setState({ hovered: false });\n        }\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    }\n\n    @autobind\n    handleMouseDown(event) {\n        if (!this.props.disabled) {\n            this.setState({ pressed: true });\n        }\n\n        if (this.props.onMouseDown) {\n            this.props.onMouseDown(event);\n        }\n    }\n\n    @autobind\n    handleMouseUp(event) {\n        if (!this.props.disabled) {\n            this.setState({ pressed: false });\n        }\n\n        if (this.props.onMouseUp) {\n            this.props.onMouseUp(event);\n        }\n    }\n\n    @autobind\n    handleMouseOut(event) {\n        if (!this.props.disabled) {\n            this.setState({ pressed: false });\n        }\n\n        if (this.props.onMouseOut) {\n            this.props.onMouseOut(event);\n        }\n    }\n\n    @autobind\n    handleKeyDown(event) {\n        if ((event.which === keyboardCode.ENTER || event.which === keyboardCode.SPACE) && !this.props.disabled) {\n            this.setState({ pressed: true });\n        }\n\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n\n    @autobind\n    handleKeyUp(event) {\n        if ((event.which === keyboardCode.ENTER || event.which === keyboardCode.SPACE) && !this.props.disabled) {\n            this.setState({ pressed: false });\n        }\n\n        if (this.props.onKeyUp) {\n            this.props.onKeyUp(event);\n        }\n    }\n\n    /**\n     * Возвращает корневой `HTMLElement` компонента.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getNode() {\n        return this.control;\n    }\n\n    /**\n     * Устанавливает фокус на поле ввода.\n     *\n     * @public\n     */\n    focus() {\n        this.control.focus();\n    }\n\n    /**\n     * Убирает фокус с поля ввода.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n}\n\nexport default Button;\n"]}