{"version":3,"sources":["list/list.jsx"],"names":["List","render","cn","listElement","props","type","listContent","items","map","item","key","value","listProps","className","id","createElement","Component","propTypes","arrayOf","shape","string","isRequired","node","oneOf","theme"],"mappings":";;;;yBAAA;;;;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;AAEA;;;IAKMA,I,WAFL,kBAAG,MAAH,C,UACA,2BAAY,IAAZ,C;;;;;;;;;mBAoBGC,M,mBAAOC,E,EAAI;AACP,YAAIC,cAAgB,KAAKC,KAAL,CAAWC,IAAX,KAAoB,SAArB,GAAkC,IAAlC,GAAyC,IAA5D;;AAEA,YAAIC,cAAc,CAAC,KAAKF,KAAL,CAAWG,KAAX,IAAoB,EAArB,EAAyBC,GAAzB,CAA6B;AAAA,mBAC3C;AAAA;AAAA;AACI,mCAAcC,KAAKC,GADvB;AAEI,+BAAYR,GAAG,MAAH;AAFhB;AAIMO,qBAAKE;AAJX,aAD2C;AAAA,SAA7B,CAAlB;;AASA,YAAIC,YAAY;AACZC,uBAAWX,GAAG;AACVG,sBAAM,KAAKD,KAAL,CAAWC;AADP,aAAH,CADC;AAIZS,gBAAI,KAAKV,KAAL,CAAWU;AAJH,SAAhB;;AAOA,eAAO,gBAAMC,aAAN,CACHZ,WADG,EAEHS,SAFG,EAGHN,WAHG,CAAP;AAKH,K;;;EA3Cc,gBAAMU,S;AAAnBhB,I,CACKiB,S,2CAAY;AACf;AACAV,WAAO,oBAAKW,OAAL,CAAa,oBAAKC,KAAL,CAAW;AAC3B;AACAT,aAAK,oBAAKU,MAAL,CAAYC,UAFU;AAG3B;AACAV,eAAO,oBAAKW,IAAL,CAAUD;AAJU,KAAX,CAAb,CAFQ;AAQf;AACAhB,UAAM,oBAAKkB,KAAL,CAAW,CAAC,SAAD,EAAY,SAAZ,CAAX,CATS;AAUf;AACAC,WAAO,oBAAKD,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAXQ;AAYf;AACAV,eAAW,oBAAKO,MAbD;AAcf;AACAN,QAAI,oBAAKM;AAfM,C;kBA6CRpB,I","file":"list.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент списка.\n */\n@cn('list')\n@performance(true)\nclass List extends React.Component {\n    static propTypes = {\n        /** Список элементов */\n        items: Type.arrayOf(Type.shape({\n            /** Уникальный ключ элемента */\n            key: Type.string.isRequired,\n            /** Содержание элемента */\n            value: Type.node.isRequired\n        })),\n        /** Тип списка */\n        type: Type.oneOf(['default', 'ordered']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string\n    };\n\n    render(cn) {\n        let listElement = ((this.props.type !== 'ordered') ? 'ul' : 'ol');\n\n        let listContent = (this.props.items || []).map(item => (\n            <li\n                key={ `item-${item.key}` }\n                className={ cn('item') }\n            >\n                { item.value }\n            </li>\n        ));\n\n        let listProps = {\n            className: cn({\n                type: this.props.type\n            }),\n            id: this.props.id\n        };\n\n        return React.createElement(\n            listElement,\n            listProps,\n            listContent\n        );\n    }\n}\n\nexport default List;\n"]}