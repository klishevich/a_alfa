{"version":3,"sources":["collapse/collapse.jsx"],"names":["Collapse","state","isExpanded","componentDidMount","updateContentHeight","componentDidUpdate","render","cn","ToggledIcon","expanded","props","undefined","id","content","contentCase","children","handleExpandedChange","expandedLabel","collapsedLabel","newExpandedValue","setState","onExpandedChange","contentHeight","offsetHeight","style","height","Component","defaultProps","propTypes","bool","string","oneOfType","arrayOf","node","theme","oneOf","className","func"],"mappings":"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","file":"collapse.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport IconArrowDown from '../icon/ui/arrow-down';\nimport IconArrowUp from '../icon/ui/arrow-up';\nimport Link from '../link/link';\nimport ResizeSensor from '../resize-sensor/resize-sensor';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент «подката» позволяет спрятать кусок текста за ссылку «Еще...».\n */\n@cn('collapse')\n@performance()\nclass Collapse extends React.Component {\n    static propTypes = {\n        /** Управление `expanded` состоянием компонента */\n        isExpanded: Type.bool,\n        /** Текст ссылки в `expanded` состоянии */\n        collapsedLabel: Type.string,\n        /** Текст ссылки в `collapsed` состоянии */\n        expandedLabel: Type.string,\n        /** Дочерние элементы `Collapse` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Обработчик смены состояний `expanded/collapsed` */\n        onExpandedChange: Type.func\n    };\n\n    static defaultProps = {\n        expandedLabel: 'Collapse',\n        collapsedLabel: 'Expand'\n    };\n\n    state = {\n        isExpanded: false\n    };\n\n    content;\n    contentCase;\n\n    componentDidMount() {\n        this.updateContentHeight();\n    }\n\n    componentDidUpdate() {\n        this.updateContentHeight();\n    }\n\n    render(cn) {\n        let ToggledIcon;\n        let expanded = this.props.isExpanded !== undefined\n            ? this.props.isExpanded\n            : this.state.isExpanded;\n\n        switch (expanded) {\n            case true: ToggledIcon = IconArrowUp; break;\n            case false: ToggledIcon = IconArrowDown; break;\n        }\n\n        return (\n            <div\n                className={ cn({\n                    expanded\n                }) }\n                id={ this.props.id }\n            >\n                <div\n                    ref={ (content) => { this.content = content; } }\n                    className={ cn('content') }\n                >\n                    <div ref={ (contentCase) => { this.contentCase = contentCase; } }>\n                        { this.props.children }\n                    </div>\n                    <ResizeSensor onResize={ this.updateContentHeight } />\n                </div>\n                <Link\n                    className={ cn('link') }\n                    pseudo={ true }\n                    icon={\n                        <ToggledIcon size='s' />\n                    }\n                    iconPosition='right'\n                    onClick={ this.handleExpandedChange }\n                    text={\n                        expanded\n                            ? this.props.expandedLabel\n                            : this.props.collapsedLabel\n                    }\n                />\n            </div>\n        );\n    }\n\n    @autobind\n    handleExpandedChange() {\n        let newExpandedValue = this.props.isExpanded !== undefined\n            ? !this.props.isExpanded\n            : !this.state.isExpanded;\n\n        this.setState({\n            isExpanded: newExpandedValue\n        });\n\n        if (this.props.onExpandedChange) {\n            this.props.onExpandedChange(newExpandedValue);\n        }\n    }\n\n    @autobind\n    updateContentHeight() {\n        let expanded = this.props.isExpanded !== undefined\n            ? this.props.isExpanded\n            : this.state.isExpanded;\n\n        let contentHeight;\n\n        if (expanded) {\n            contentHeight = this.contentCase.offsetHeight;\n        } else {\n            contentHeight = 0;\n        }\n\n        if (this.content) {\n            this.content.style.height = `${contentHeight}px`;\n        }\n    }\n}\n\nexport default Collapse;\n"]}