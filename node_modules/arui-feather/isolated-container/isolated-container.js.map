{"version":3,"sources":["isolated-container/isolated-container.jsx"],"names":["IsolatedContainer","shouldComponentUpdate","render","element","getNode","Component"],"mappings":";;;;AAIA;;;;;;;;;;;;+eAJA;;;;AAMA;;;;;IAKMA,iB;;;;;;;;;8BAMFC,qB,oCAAwB;AACpB,WAAO,KAAP;AACH,G;AAPD;;;;;8BASAC,M,qBAAS;AAAA;;AACL,WAAO,uCAAK,KAAM,aAACC,OAAD,EAAa;AAAE,eAAKA,OAAL,GAAeA,OAAf;AAAyB,OAAnD,GAAP;AACH,G;;AAED;;;;;;;;8BAMAC,O,sBAAU;AACN,WAAO,KAAKD,OAAZ;AACH,G;;;EAtB2B,gBAAME,S;;kBAyBvBL,iB","file":"isolated-container.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\n\n/**\n * Изолирует своих детей от изменений `props`-ов, и `context`-а.\n * Используется для визуализации элементов в кастомных контейнерах,\n * о которых React не должен ничего знать.\n */\nclass IsolatedContainer extends React.Component {\n    /**\n     * @type {HTMLElement}\n     */\n    element;\n\n    shouldComponentUpdate() {\n        return false;\n    }\n\n    render() {\n        return <div ref={ (element) => { this.element = element; } } />;\n    }\n\n    /**\n     * Возвращает корневой `HTMLElement` компонента.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getNode() {\n        return this.element;\n    }\n}\n\nexport default IsolatedContainer;\n"]}