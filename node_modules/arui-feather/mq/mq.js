'use strict';

exports.__esModule = true;

var _desc, _value, _class; /* This Source Code Form is subject to the terms of the Mozilla Public
                            * License, v. 2.0. If a copy of the MPL was not distributed with this
                            * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

var _autobind = require('core-decorators/lib/autobind');

var _autobind2 = _interopRequireDefault(_autobind);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _modernizr = require('../modernizr');

var _modernizr2 = _interopRequireDefault(_modernizr);

var _matchMedia = require('../lib/match-media');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var IS_BROWSER = typeof window !== 'undefined';
var SUPPORTS_TOUCH = IS_BROWSER && (_modernizr2.default.pointerevents || _modernizr2.default.touchevents);

/**
 * Компонент, имплементирующий поддержку медиа запросов в шаблонах.
 * Рендерит внутренние компоненты/разметку исходя из соответствия условиям запроса.
 * Для `query` используется window.matchMedia с полифиллом для IE9.
 * Можно использовать кастомные запросы из `src/mq/mq.json`, например `--small`.
 * Пока браузеры не поддерживают CSS4 Media Queries, поддержка тач-событий определяется через `touch`.
 */
var Mq = (_class = function (_React$Component) {
    _inherits(Mq, _React$Component);

    function Mq() {
        var _temp, _this, _ret;

        _classCallCheck(this, Mq);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
            isMatched: false
        }, _this.mql = null, _temp), _possibleConstructorReturn(_this, _ret);
    }

    Mq.prototype.componentDidMount = function componentDidMount() {
        this.mql = (0, _matchMedia.getMatchMedia)(this.props.query);
        this.mql.addListener(this.handleMatch);
        this.handleMatch(this.mql);
    };

    Mq.prototype.componentWillUnmount = function componentWillUnmount() {
        (0, _matchMedia.releaseMatchMedia)(this.props.query);
        this.mql.removeListener(this.handleMatch);
        this.mql = null;
    };

    Mq.prototype.render = function render() {
        if (!this.props.children || !IS_BROWSER || !this.state.isMatched) return false;

        return this.props.children;
    };

    /**
     * @param {Object} [mql] MediaQueryList или MediaQueryListEvent
     */


    Mq.prototype.handleMatch = function handleMatch(mql) {
        var _this2 = this;

        var queryPass = true;
        var touchPass = true;

        if (this.props.query) {
            queryPass = mql.matches;
        }
        if (this.props.touch) {
            touchPass = SUPPORTS_TOUCH;
        } else if (this.props.touch === false) {
            touchPass = !SUPPORTS_TOUCH;
        }

        this.setState({
            isMatched: queryPass && touchPass
        }, function () {
            if (_this2.props.onMatchChange) {
                _this2.props.onMatchChange(_this2.state.isMatched);
            }
        });
    };

    return Mq;
}(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMatch', [_autobind2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMatch'), _class.prototype)), _class);
Mq.propTypes = process.env.NODE_ENV !== "production" ? {
    /** Медиа запрос */
    query: _propTypes2.default.string,
    /** Запрос на поддержку тач-событий */
    touch: _propTypes2.default.bool,
    /** Дочерние элементы `Mq` */
    children: _propTypes2.default.node,
    /** Обработчик изменений в совпадении запросов */
    onMatchChange: _propTypes2.default.func
} : {};
exports.default = Mq;
//# sourceMappingURL=mq.js.map
