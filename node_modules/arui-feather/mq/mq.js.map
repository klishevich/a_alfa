{"version":3,"sources":["mq/mq.jsx"],"names":["IS_BROWSER","window","SUPPORTS_TOUCH","pointerevents","touchevents","Mq","state","isMatched","mql","componentDidMount","props","query","addListener","handleMatch","componentWillUnmount","removeListener","render","children","queryPass","touchPass","matches","touch","setState","onMatchChange","Component","propTypes","string","bool","node","func"],"mappings":";;;;2BAAA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,OAAOC,MAAP,KAAkB,WAArC;AACA,IAAMC,iBAAiBF,eAAe,oBAAUG,aAAV,IAA2B,oBAAUC,WAApD,CAAvB;;AAEA;;;;;;;IAOMC,E;;;;;;;;;;;;4JAYFC,K,GAAQ;AACJC,uBAAW;AADP,S,QAIRC,G,GAAM,I;;;iBAENC,iB,gCAAoB;AAChB,aAAKD,GAAL,GAAW,+BAAc,KAAKE,KAAL,CAAWC,KAAzB,CAAX;AACA,aAAKH,GAAL,CAASI,WAAT,CAAqB,KAAKC,WAA1B;AACA,aAAKA,WAAL,CAAiB,KAAKL,GAAtB;AACH,K;;iBAEDM,oB,mCAAuB;AACnB,2CAAkB,KAAKJ,KAAL,CAAWC,KAA7B;AACA,aAAKH,GAAL,CAASO,cAAT,CAAwB,KAAKF,WAA7B;AACA,aAAKL,GAAL,GAAW,IAAX;AACH,K;;iBAEDQ,M,qBAAS;AACL,YAAI,CAAC,KAAKN,KAAL,CAAWO,QAAZ,IAAwB,CAACjB,UAAzB,IAAuC,CAAC,KAAKM,KAAL,CAAWC,SAAvD,EAAkE,OAAO,KAAP;;AAElE,eAAO,KAAKG,KAAL,CAAWO,QAAlB;AACH,K;;AAED;;;;;iBAIAJ,W,wBAAYL,G,EAAK;AAAA;;AACb,YAAIU,YAAY,IAAhB;AACA,YAAIC,YAAY,IAAhB;;AAEA,YAAI,KAAKT,KAAL,CAAWC,KAAf,EAAsB;AAClBO,wBAAYV,IAAIY,OAAhB;AACH;AACD,YAAI,KAAKV,KAAL,CAAWW,KAAf,EAAsB;AAClBF,wBAAYjB,cAAZ;AACH,SAFD,MAEO,IAAI,KAAKQ,KAAL,CAAWW,KAAX,KAAqB,KAAzB,EAAgC;AACnCF,wBAAY,CAACjB,cAAb;AACH;;AAED,aAAKoB,QAAL,CAAc;AACVf,uBAAYW,aAAaC;AADf,SAAd,EAEG,YAAM;AACL,gBAAI,OAAKT,KAAL,CAAWa,aAAf,EAA8B;AAC1B,uBAAKb,KAAL,CAAWa,aAAX,CAAyB,OAAKjB,KAAL,CAAWC,SAApC;AACH;AACJ,SAND;AAOH,K;;;EA5DY,gBAAMiB,S;AAAjBnB,E,CACKoB,S,2CAAY;AACf;AACAd,WAAO,oBAAKe,MAFG;AAGf;AACAL,WAAO,oBAAKM,IAJG;AAKf;AACAV,cAAU,oBAAKW,IANA;AAOf;AACAL,mBAAe,oBAAKM;AARL,C;kBA8DRxB,E","file":"mq.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport React from 'react';\nimport Type from 'prop-types';\nimport Modernizr from '../modernizr';\nimport { getMatchMedia, releaseMatchMedia } from '../lib/match-media';\n\nconst IS_BROWSER = typeof window !== 'undefined';\nconst SUPPORTS_TOUCH = IS_BROWSER && (Modernizr.pointerevents || Modernizr.touchevents);\n\n/**\n * Компонент, имплементирующий поддержку медиа запросов в шаблонах.\n * Рендерит внутренние компоненты/разметку исходя из соответствия условиям запроса.\n * Для `query` используется window.matchMedia с полифиллом для IE9.\n * Можно использовать кастомные запросы из `src/mq/mq.json`, например `--small`.\n * Пока браузеры не поддерживают CSS4 Media Queries, поддержка тач-событий определяется через `touch`.\n */\nclass Mq extends React.Component {\n    static propTypes = {\n        /** Медиа запрос */\n        query: Type.string,\n        /** Запрос на поддержку тач-событий */\n        touch: Type.bool,\n        /** Дочерние элементы `Mq` */\n        children: Type.node,\n        /** Обработчик изменений в совпадении запросов */\n        onMatchChange: Type.func\n    };\n\n    state = {\n        isMatched: false\n    };\n\n    mql = null;\n\n    componentDidMount() {\n        this.mql = getMatchMedia(this.props.query);\n        this.mql.addListener(this.handleMatch);\n        this.handleMatch(this.mql);\n    }\n\n    componentWillUnmount() {\n        releaseMatchMedia(this.props.query);\n        this.mql.removeListener(this.handleMatch);\n        this.mql = null;\n    }\n\n    render() {\n        if (!this.props.children || !IS_BROWSER || !this.state.isMatched) return false;\n\n        return this.props.children;\n    }\n\n    /**\n     * @param {Object} [mql] MediaQueryList или MediaQueryListEvent\n     */\n    @autobind\n    handleMatch(mql) {\n        let queryPass = true;\n        let touchPass = true;\n\n        if (this.props.query) {\n            queryPass = mql.matches;\n        }\n        if (this.props.touch) {\n            touchPass = SUPPORTS_TOUCH;\n        } else if (this.props.touch === false) {\n            touchPass = !SUPPORTS_TOUCH;\n        }\n\n        this.setState({\n            isMatched: (queryPass && touchPass)\n        }, () => {\n            if (this.props.onMatchChange) {\n                this.props.onMatchChange(this.state.isMatched);\n            }\n        });\n    }\n}\n\nexport default Mq;\n"]}