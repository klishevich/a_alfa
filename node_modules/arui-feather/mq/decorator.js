'use strict';

exports.__esModule = true;
exports.default = mqDecorator;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _autobind = require('core-decorators/lib/autobind');

var _autobind2 = _interopRequireDefault(_autobind);

var _matchMedia = require('../lib/match-media');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
} /* This Source Code Form is subject to the terms of the Mozilla Public
   * License, v. 2.0. If a copy of the MPL was not distributed with this
   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

function mqDecorator(query) {
    var propName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'mqMatch';

    return function (Component) {
        var _desc, _value, _class;

        return _class = function (_React$Component) {
            _inherits(_class, _React$Component);

            function _class() {
                var _temp, _this, _ret;

                _classCallCheck(this, _class);

                for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.mql = null, _this.state = {
                    matched: false
                }, _temp), _possibleConstructorReturn(_this, _ret);
            }

            _class.prototype.componentDidMount = function componentDidMount() {
                this.mql = (0, _matchMedia.getMatchMedia)(query);
                this.handleMatchChange(this.mql);
                this.mql.addListener(this.handleMatchChange);
            };

            _class.prototype.componentWillUnmount = function componentWillUnmount() {
                (0, _matchMedia.releaseMatchMedia)(query);
                this.mql.removeListener(this.handleMatchChange);
                this.mql = null;
            };

            _class.prototype.render = function render() {
                var _Object$assign;

                return _react2.default.createElement(Component, Object.assign({}, this.props, (_Object$assign = {}, _Object$assign[propName] = this.state.matched, _Object$assign)));
            };

            _class.prototype.handleMatchChange = function handleMatchChange(mql) {
                this.setState({
                    matched: mql.matches
                });
            };

            return _class;
        }(_react2.default.Component), (_applyDecoratedDescriptor(_class.prototype, 'handleMatchChange', [_autobind2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'handleMatchChange'), _class.prototype)), _class;
    };
}
//# sourceMappingURL=decorator.js.map
