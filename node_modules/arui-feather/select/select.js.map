{"version":3,"sources":["select/select.jsx"],"names":["SelectButton","Select","state","hasGroup","isMobile","opened","props","popupStyles","value","componentWillMount","setState","options","some","option","type","content","componentDidMount","popup","setPopupTarget","updatePopupStyles","componentWillReceiveProps","nextProps","disabled","toggleOpened","render","cn","Popup","getValue","mode","size","width","checked","length","label","invalid","error","getOpened","root","id","name","renderButton","handleMqMatchChange","mobileMenuMode","renderNativeSelect","hint","renderPopup","tickSize","ToggledIcon","button","handleButtonClick","handleButtonFocus","handleButtonBlur","renderButtonContent","isCheckMode","hasEmptyOptGroup","hasEmptyOption","nativeSelect","handleNativeOptionCheck","handleNativeClick","handleNativeFocus","handleNativeBlur","placeholder","renderNativeOptionsList","optionsList","renderOptionsList","directions","popupMainOffset","popupSecondaryOffset","renderMobileHeader","handleClickOutside","minWidth","maxWidth","menu","groupView","handleOptionCheck","handleMenuFocus","handleMenuBlur","handleMenuHighlightItem","handleMenuKeyDown","map","title","description","text","icon","groupKey","nativeText","checkedItems","getCheckedItems","checkedItemsText","item","checkedText","join","mobileTitle","handlePopupCloserClick","event","onClick","handleButtonKeyDown","which","ENTER","SPACE","onKeyDown","onButtonFocus","getRevisedEvent","onButtonBlur","target","onFocus","onMenuFocus","relatedTarget","getNode","onBlur","onMenuBlur","highlightedItem","getInnerNode","scrollTop","scrollToHighlightedItem","newOpened","focus","onChange","getFlattenedPropOptions","result","forEach","findInGroup","concat","push","domOptions","Array","from","currentTarget","filter","index","flattenedPropOptions","reduce","selected","blur","onClickOutside","DOWN_ARROW","UP_ARROW","preventDefault","focusOnMenu","ESCAPE","isMatched","document","activeElement","scrollTo","elementRect","getBoundingClientRect","targetY","top","window","pageYOffset","scrollContainer","getScrollContainer","posX","posY","scrollLeft","element","container","correction","offsetHeight","offsetTop","duration","newOpenedState","buttonWidth","equalPopupWidth","setTarget","indexOf","undefined","context","positioningContainerElement","body","Component","defaultProps","contextTypes","propTypes","className","string","oneOf","arrayOf","bool","oneOfType","number","shape","node","array","object","theme","func"],"mappings":";;;;kFAAA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAIMA,Y,WADL,kBAAG,eAAH,C;;;;;;;;;;;;AAGD;;;;;;;;AAQA;;;;IAKMC,M,YAFL,kBAAG,QAAH,EAAaD,YAAb,kB,UACA,2BAAY,IAAZ,C;;;;;;;;;;;;+JAoHGE,K,GAAQ;AACJC,sBAAU,KADN;AAEJC,sBAAU,KAFN;AAGJC,oBAAQ,CAAC,CAAC,OAAKC,KAAL,CAAWD,MAHjB;AAIJE,yBAAa,EAJT;AAKJC,mBAAO,OAAKF,KAAL,CAAWE,KAAX,IAAoB;AALvB,S;;;AAQR;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;qBAKAC,kB,iCAAqB;AACjB,aAAKC,QAAL,CAAc;AACVP,sBAAU,KAAKG,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB;AAAA,uBAAU,CAAC,EAAEC,OAAOC,IAAP,KAAgB,OAAhB,IAA2B,CAAC,CAACD,OAAOE,OAAtC,CAAX;AAAA,aAAxB;AADA,SAAd;AAGH,K;;qBAEDC,iB,gCAAoB;AAChB,YAAI,KAAKC,KAAT,EAAgB;AACZ,iBAAKC,cAAL;AACA,iBAAKC,iBAAL;AACH;AACJ,K;;qBAEDC,yB,sCAA0BC,S,EAAW;AACjC,YAAI,KAAKJ,KAAT,EAAgB;AACZ,iBAAKC,cAAL;AACA,iBAAKC,iBAAL;AACH;;AAED,YAAI,KAAKjB,KAAL,CAAWG,MAAX,IAAqBgB,UAAUC,QAAnC,EAA6C;AACzC,iBAAKC,YAAL;AACH;;AAED,aAAKb,QAAL,CAAc;AACVP,sBAAU,KAAKG,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB;AAAA,uBAAU,CAAC,EAAEC,OAAOC,IAAP,KAAgB,OAAhB,IAA2B,CAAC,CAACD,OAAOE,OAAtC,CAAX;AAAA,aAAxB;AADA,SAAd;AAGH,K;;qBAEDS,M,mBAAOC,E,EAAIzB,Y,EAAc0B,K,EAAO;AAAA;;AAC5B,YAAIlB,QAAQ,KAAKmB,QAAL,EAAZ;;AAEA,eACI;AAAA;AAAA;AACI,2BAAYF,GAAG;AACXG,0BAAM,KAAKtB,KAAL,CAAWsB,IADN;AAEXC,0BAAM,KAAKvB,KAAL,CAAWuB,IAFN;AAGXC,2BAAO,KAAKxB,KAAL,CAAWwB,KAHP;AAIXC,6BAASvB,MAAMwB,MAAN,GAAe,CAJb;AAKXV,8BAAU,KAAKhB,KAAL,CAAWgB,QALV;AAMX,iCAAa,CAAC,CAAC,KAAKhB,KAAL,CAAW2B,KANf;AAOX,iCAAa,CAAC,CAACzB,KAPJ;AAQX0B,6BAAS,CAAC,CAAC,KAAK5B,KAAL,CAAW6B,KARX;AASX9B,4BAAQ,KAAK+B,SAAL;AATG,iBAAH,CADhB;AAYI,qBAAM,aAACC,IAAD,EAAU;AAAE,2BAAKA,IAAL,GAAYA,IAAZ;AAAmB;AAZzC;AAcI;AAAA;AAAA,kBAAM,WAAYZ,GAAG,OAAH,CAAlB;AACI;AACI,wBAAK,KAAKnB,KAAL,CAAWgC,EADpB;AAEI,0BAAO,KAAKhC,KAAL,CAAWiC,IAFtB;AAGI,0BAAK,QAHT;AAII,2BAAQ/B;AAJZ,kBADJ;AAQQ,iBAAC,CAAC,KAAKF,KAAL,CAAW2B,KAAb,IACA;AAAA;AAAA,sBAAM,WAAYR,GAAG,KAAH,CAAlB;AACM,yBAAKnB,KAAL,CAAW2B;AADjB,iBATR;AAaM,qBAAKO,YAAL,CAAkBf,EAAlB,EAAsBzB,YAAtB,CAbN;AAcI;AAAA;AAAA;AACI,+BAAM,cADV;AAEI,+BAAQ,IAFZ;AAGI,uCAAgB,KAAKyC;AAHzB;AAMQ,yBAAKnC,KAAL,CAAWoC,cAAX,KAA8B,QAA9B,IACA,KAAKC,kBAAL,CAAwBlB,EAAxB;AAPR,iBAdJ;AAyBQ,iBAAC,KAAKnB,KAAL,CAAW6B,KAAX,IAAoB,KAAK7B,KAAL,CAAWsC,IAAhC,KACA;AAAA;AAAA,sBAAM,WAAYnB,GAAG,KAAH,CAAlB;AACM,yBAAKnB,KAAL,CAAW6B,KAAX,IAAoB,KAAK7B,KAAL,CAAWsC;AADrC,iBA1BR;AA+BQ,iBAAC,CAAC,KAAK1C,KAAL,CAAWE,QAAZ,IACA,KAAKF,KAAL,CAAWE,QAAX,IAAuB,KAAKE,KAAL,CAAWoC,cAAX,KAA8B,OADtD,KAEA,KAAKG,WAAL,CAAiBpB,EAAjB,EAAqBC,KAArB;AAjCR;AAdJ,SADJ;AAqDH,K;;qBAEDc,Y,yBAAaf,E,EAAIzB,Y,EAAc;AAAA;;AAC3B,YAAI8C,iBAAJ;AACA,YAAIC,oBAAJ;AACA,YAAI1C,SAAS,KAAK+B,SAAL,EAAb;;AAEA,gBAAQ/B,MAAR;AACI,iBAAK,IAAL;AAAW0C,gDAA2B;AACtC,iBAAK,KAAL;AAAYA,kDAA6B;AAF7C;;AAKA,gBAAQ,KAAKzC,KAAL,CAAWuB,IAAnB;AACI,iBAAK,GAAL,CAAU,KAAK,GAAL;AAAUiB,2BAAW,GAAX,CAAgB;AACpC,iBAAK,GAAL;AAAUA,2BAAW,GAAX,CAAgB;AAC1B,iBAAK,IAAL;AAAWA,2BAAW,GAAX,CAAgB;AAH/B;;AAMA,eACI;AAAC,wBAAD;AAAA;AACI,qBAAM,aAACE,MAAD,EAAY;AAAE,2BAAKA,MAAL,GAAcA,MAAd;AAAuB,iBAD/C;AAEI,sBAAO,KAAK1C,KAAL,CAAWuB,IAFtB;AAGI,0BAAW,KAAKvB,KAAL,CAAWgB,QAH1B;AAII,yBAAU,KAAKc,SAAL,EAJd;AAKI,yBAAU,KAAKa,iBALnB;AAMI,yBAAU,KAAKC,iBANnB;AAOI,wBAAS,KAAKC;AAPlB;AASM,iBAAKC,mBAAL,EATN;AAUI;AAAA;AAAA;AACI,+BAAY3B,GAAG,MAAH,CADhB;AAEI,yBAAI,YAFR;AAGI,0BAAO,KAAKnB,KAAL,CAAWuB,IAHtB;AAII,yBAAI;AAJR;AAMI,8CAAC,WAAD,IAAa,MAAOiB,QAApB;AANJ,aAVJ;AAkBI,oEAAc,KAAI,cAAlB,EAAiC,UAAW,KAAK3B,iBAAjD;AAlBJ,SADJ;AAsBH,K;;qBAEDwB,kB,+BAAmBlB,E,EAAI;AAAA;;AACnB,YAAI4B,cAAc,KAAK/C,KAAL,CAAWsB,IAAX,KAAoB,OAAtC;AACA,YAAI0B,mBAAmBD,eAAe,KAAKnD,KAAL,CAAWC,QAAjD;AACA,YAAIoD,iBAAiB,CAACF,WAAD,IAAgB,CAAC,KAAKnD,KAAL,CAAWC,QAAjD;AACA,YAAIK,QAAQ,KAAKmB,QAAL,EAAZ;;AAEA,YAAI,CAAC0B,WAAL,EAAkB;AACd7C,oBAAQA,MAAMwB,MAAN,GAAexB,MAAM,CAAN,CAAf,GAA0B,EAAlC;AACH;;AAED,eACI;AAAA;AAAA;AACI,qBAAM,aAACgD,YAAD,EAAkB;AAAE,2BAAKA,YAAL,GAAoBA,YAApB;AAAmC,iBADjE;AAEI,2BAAY/B,GAAG,gBAAH,CAFhB;AAGI,0BAAW,KAAKnB,KAAL,CAAWgB,QAH1B;AAII,0BAAW+B,eAAe,UAJ9B;AAKI,uBAAQ7C,KALZ;AAMI,0BAAW,KAAKiD,uBANpB;AAOI,yBAAU,KAAKC,iBAPnB;AAQI,yBAAU,KAAKC,iBARnB;AASI,wBAAS,KAAKC;AATlB;;AAYQ;;;;;;;;;AASAN,gCACA;AACI,0BAAW,IADf;AAEI,uBAAQ,KAAKhD,KAAL,CAAWuD;AAFvB,cAtBR;AA4BQN,8BACA;AAAA;AAAA,kBAAQ,UAAW,IAAnB,EAA0B,OAAM,EAAhC;AACM,qBAAKjD,KAAL,CAAWuD;AADjB,aA7BR;AAiCM,iBAAKC,uBAAL,CAA6B,KAAKxD,KAAL,CAAWK,OAAxC;AAjCN,SADJ;AAqCH,K;;qBAEDkC,W,wBAAYpB,E,EAAIC,K,EAAO;AAAA;;AACnB,YAAIqC,cAAc,KAAKC,iBAAL,CAAuB,KAAK1D,KAAL,CAAWK,OAAlC,CAAlB;AACA,YAAIN,SAAS,KAAK+B,SAAL,EAAb;AACA,YAAI5B,QAAQ,KAAKmB,QAAL,EAAZ;;AAEA,eACI;AAAC,iBAAD;AAAA;AACI,qBAAI,OADR;AAEI,qBAAM,aAACV,KAAD,EAAW;AAAE,2BAAKA,KAAL,GAAaA,KAAb;AAAqB,iBAF5C;AAGI,uBAAM,KAAKX,KAAL,CAAWiC,IAHrB;AAII,2BAAYd,GAAG,OAAH,CAJhB;AAKI,4BAAa,KAAKnB,KAAL,CAAW2D,UAL5B;AAMI,wBAAO,UANX;AAOI,wBAAS,KAPb;AAQI,4BAAa,KAAK3D,KAAL,CAAW4D,eAR5B;AASI,iCAAkB,KAAK5D,KAAL,CAAW6D,oBATjC;AAUI,sBAAO,KAAK7D,KAAL,CAAWuB,IAVtB;AAWI,wBAAS,KAAK3B,KAAL,CAAWE,QAAX,GAAsB,QAAtB,GAAiC,QAX9C;AAYI,wBAAS,KAAKF,KAAL,CAAWE,QAAX,IAAuB,KAAKgE,kBAAL,CAAwB3C,EAAxB,CAZpC;AAaI,yBAAUpB,MAbd;AAcI,gCAAiB,KAAKgE,kBAd1B;AAeI,0BAAW,KAAKnE,KAAL,CAAWK,WAAX,CAAuB+D,QAftC;AAgBI,0BAAW,KAAKpE,KAAL,CAAWK,WAAX,CAAuBgE;AAhBtC;AAkBI;AACI,qBAAM,aAACC,IAAD,EAAU;AAAE,2BAAKA,IAAL,GAAYA,IAAZ;AAAmB,iBADzC;AAEI,2BAAY/C,GAAG,MAAH,CAFhB;AAGI,sBAAO,KAAKnB,KAAL,CAAWuB,IAHtB;AAII,0BAAW,KAAKvB,KAAL,CAAWgB,QAJ1B;AAKI,sBAAO,KAAKhB,KAAL,CAAWsB,IALtB;AAMI,2BAAY,KAAKtB,KAAL,CAAWmE,SAN3B;AAOI,yBAAUV,WAPd;AAQI,6BAAc,KAAKW,iBARvB;AASI,8BAAelE,KATnB;AAUI,yBAAU,KAAKmE,eAVnB;AAWI,wBAAS,KAAKC,cAXlB;AAYI,iCAAkB,KAAKC,uBAZ3B;AAaI,2BAAY,KAAKC;AAbrB;AAlBJ,SADJ;AAoCH,K;;qBAEDd,iB,8BAAkBrD,O,EAAS;AAAA;;AACvB,eACIA,QAAQoE,GAAR,CAAY,UAAClE,MAAD,EAAY;AACpB,gBAAIA,OAAOC,IAAP,KAAgB,OAAhB,IAA2B,CAAC,CAACD,OAAOE,OAAxC,EAAiD;AAC7C,oBAAIA,WAAU,OAAKiD,iBAAL,CAAuBnD,OAAOE,OAA9B,CAAd;;AAEA,uBAAQ;AACJD,0BAAM,OADF;AAEJkE,2BAAOnE,OAAOmE,KAFV;AAGJjE;AAHI,iBAAR;AAKH;;AAED,gBAAIA,UAAUF,OAAOoE,WAAP,IAAsBpE,OAAOqE,IAA3C;;AAEA,mBAAQ;AACJ5E,uBAAOO,OAAOP,KADV;AAEJE,uBAAOK,OAAOL,KAFV;AAGJO,yBAAS,yCAAe,EAAEoE,MAAMtE,OAAOsE,IAAf,EAAqBpE,gBAArB,EAAf;AAHL,aAAR;AAKH,SAlBD,CADJ;AAqBH,K;;qBAED+C,uB,oCAAwBnD,O,EAAS;AAAA;;AAC7B,YAAIyE,WAAW,CAAf;;AAEA,eACIzE,QAAQoE,GAAR,CAAY,UAAClE,MAAD,EAAY;AACpB,gBAAIA,OAAOC,IAAP,KAAgB,OAAhB,IAA2B,CAAC,CAACD,OAAOE,OAAxC,EAAiD;AAC7C,oBAAIA,UAAU,OAAK+C,uBAAL,CAA6BjD,OAAOE,OAApC,CAAd;;AAEAqE,4BAAY,CAAZ;;AAEA,uBACI;AAAA;AAAA;AACI,wCAAeA,QADnB;AAEI,+BAAQvE,OAAOmE;AAFnB;AAIMjE;AAJN,iBADJ;AAQH;;AAED,mBACI;AAAA;AAAA;AACI,yBAAMF,OAAOL,KADjB;AAEI,2BAAQK,OAAOL;AAFnB;AAIMK,uBAAOwE,UAAP,IAAqBxE,OAAOqE;AAJlC,aADJ;AAQH,SAxBD,CADJ;AA2BH,K;;qBAED9B,mB,kCAAsB;AAClB,YAAIkC,eAAe,KAAKC,eAAL,CAAqB,KAAKjF,KAAL,CAAWK,OAAhC,CAAnB;;AAEA,YAAI,KAAKL,KAAL,CAAW8C,mBAAf,EAAoC;AAChC,mBAAO,KAAK9C,KAAL,CAAW8C,mBAAX,CAA+BkC,YAA/B,CAAP;AACH;;AAED,YAAIE,mBAAmBF,aAAaP,GAAb,CAAiB;AAAA,mBAAQU,KAAKC,WAAL,IAAoBD,KAAKP,IAAjC;AAAA,SAAjB,EAAwDS,IAAxD,CAA6D,IAA7D,CAAvB;AACA,eAAOH,oBAAoB,KAAKlF,KAAL,CAAWuD,WAAtC;AACH,K;;qBAEDO,kB,+BAAmB3C,E,EAAI;AACnB,eACI;AACI,uBAAYA,GAAG,eAAH,CADhB;AAEI,kBAAO,KAAKnB,KAAL,CAAWuB,IAFtB;AAGI,mBAAQ,KAAKvB,KAAL,CAAWsF,WAAX,IAA0B,KAAKtF,KAAL,CAAWuD,WAHjD;AAII,2BAAgB,KAAKgC;AAJzB,UADJ;AAQH,K;;qBAGD5C,iB,8BAAkB6C,K,EAAO;AACrB,YAAI,CAAC,KAAKxF,KAAL,CAAWgB,QAAhB,EAA0B;AACtB,iBAAKC,YAAL;AACH;;AAED,YAAI,KAAKjB,KAAL,CAAWyF,OAAf,EAAwB;AACpB,iBAAKzF,KAAL,CAAWyF,OAAX,CAAmBD,KAAnB;AACH;AACJ,K;;qBAGDE,mB,gCAAoBF,K,EAAO;AACvB,YAAI,CAAC,KAAKxF,KAAL,CAAWgB,QAAhB,EAA0B;AACtB,gBAAIwE,MAAMG,KAAN,KAAgB,uBAAaC,KAA7B,IAAsCJ,MAAMG,KAAN,KAAgB,uBAAaE,KAAvE,EAA8E;AAC1E,qBAAK5E,YAAL;AACH;AACJ;;AAED,YAAI,KAAKjB,KAAL,CAAW8F,SAAf,EAA0B;AACtB,iBAAK9F,KAAL,CAAW8F,SAAX,CAAqBN,KAArB;AACH;AACJ,K;;qBAGD5C,iB,8BAAkB4C,K,EAAO;AACrB,YAAI,KAAKxF,KAAL,CAAW+F,aAAf,EAA8B;AAC1B,iBAAK/F,KAAL,CAAW+F,aAAX,CAAyB,KAAKC,eAAL,CAAqBR,KAArB,CAAzB;AACH;AACJ,K;;qBAGD3C,gB,6BAAiB2C,K,EAAO;AACpB,YAAI,KAAKxF,KAAL,CAAWiG,YAAf,EAA6B;AACzB,iBAAKjG,KAAL,CAAWiG,YAAX,CAAwB,KAAKD,eAAL,CAAqBR,KAArB,CAAxB;AACH;AACJ,K;;qBAGDnB,e,4BAAgBmB,K,EAAO;AACnBA,cAAMU,MAAN,CAAahG,KAAb,GAAqB,KAAKmB,QAAL,EAArB;;AAEA,YAAI,KAAKrB,KAAL,CAAWmG,OAAf,EAAwB;AACpB,iBAAKnG,KAAL,CAAWmG,OAAX,CAAmBX,KAAnB;AACH;;AAED,YAAI,KAAKxF,KAAL,CAAWoG,WAAf,EAA4B;AACxB,iBAAKpG,KAAL,CAAWoG,WAAX,CAAuBZ,KAAvB;AACH;AACJ,K;;qBAGDlB,c,2BAAekB,K,EAAO;AAClBA,cAAMU,MAAN,CAAahG,KAAb,GAAqB,KAAKmB,QAAL,EAArB;;AAEA,YAAImE,MAAMa,aAAN,KAAwB,KAAK3D,MAAL,CAAY4D,OAAZ,EAA5B,EAAmD;AAC/C,iBAAKlG,QAAL,CAAc;AACVL,wBAAQ;AADE,aAAd;AAGH;;AAED,YAAI,KAAKC,KAAL,CAAWuG,MAAf,EAAuB;AACnB,iBAAKvG,KAAL,CAAWuG,MAAX,CAAkBf,KAAlB;AACH;;AAED,YAAI,KAAKxF,KAAL,CAAWwG,UAAf,EAA2B;AACvB,iBAAKxG,KAAL,CAAWwG,UAAX,CAAsBhB,KAAtB;AACH;AACJ,K;;qBAGDjB,uB,oCAAwBkC,e,EAAiB;AACrC,YAAI,CAAC,KAAK3E,SAAL,EAAD,IAAqB2E,eAAzB,EAA0C;AACtC,iBAAK9F,KAAL,CAAW+F,YAAX,GAA0BC,SAA1B,GAAsC,CAAtC;AACA,iBAAKC,uBAAL,CAA6BH,eAA7B;AACH;AACJ,K;;qBAGDrC,iB,8BAAkBlE,K,EAAO;AAAA;;AACrB,YAAIH,SAAS,KAAK+B,SAAL,EAAb;;AAEA,aAAK1B,QAAL,CACI,EAAEF,YAAF,EAASH,QAAQ,KAAKC,KAAL,CAAWsB,IAAX,KAAoB,OAArC,EADJ,EAEI,YAAM;AACF;AACA;AACA;AACA,gBAAIuF,YAAY,OAAK/E,SAAL,EAAhB;AACA,gBAAI,CAAC+E,SAAD,IAAc9G,WAAW8G,SAA7B,EAAwC;AACpC,uBAAKnE,MAAL,CAAYoE,KAAZ;AACH;AACJ,SAVL;;AAaA,YAAI,KAAK9G,KAAL,CAAW+G,QAAf,EAAyB;AACrB,iBAAK/G,KAAL,CAAW+G,QAAX,CAAoB7G,KAApB;AACH;AACJ,K;;qBAGDiD,uB,oCAAwBqC,K,EAAO;AAC3B,iBAASwB,uBAAT,CAAiC3G,OAAjC,EAA0C;AACtC,gBAAI4G,SAAS,EAAb;;AAEA5G,oBAAQ6G,OAAR,CAAgB,UAAC3G,MAAD,EAAY;AACxB,oBAAIA,OAAOC,IAAP,KAAgB,OAAhB,IAA2B,CAAC,CAACD,OAAOE,OAAxC,EAAiD;AAC7C,wBAAI0G,cAAcH,wBAAwBzG,OAAOE,OAA/B,CAAlB;AACAwG,6BAASA,OAAOG,MAAP,CAAcD,WAAd,CAAT;AACH,iBAHD,MAGO;AACHF,2BAAOI,IAAP,CAAY9G,MAAZ;AACH;AACJ,aAPD;;AASA,mBAAO0G,MAAP;AACH;;AAED,YAAIhE,iBAAiB,KAAKjD,KAAL,CAAWsB,IAAX,KAAoB,OAApB,IAA+B,CAAC,KAAK1B,KAAL,CAAWC,QAAhE;AACA,YAAIyH,aAAaC,MAAMC,IAAN,CAAWhC,MAAMiC,aAAN,CAAoBpH,OAA/B,EAAwCqH,MAAxC,CAA+C,UAACnH,MAAD,EAASoH,KAAT;AAAA,mBAAmB,EAC/E1E,kBAAkB1C,OAAOS,QAAzB,IAAqC2G,UAAU,CADgC,CAAnB;AAAA,SAA/C,CAAjB;AAGA,YAAIC,uBAAuBZ,wBAAwB,KAAKhH,KAAL,CAAWK,OAAnC,CAA3B;AACA,YAAIH,QAAQoH,WAAWO,MAAX,CAAkB,UAACZ,MAAD,EAAS9B,IAAT,EAAewC,KAAf,EAAyB;AACnD,gBAAIxC,KAAK2C,QAAT,EAAmB;AACfb,uBAAOI,IAAP,CAAYO,qBAAqBD,KAArB,EAA4BzH,KAAxC;AACH;AACD,mBAAO+G,MAAP;AACH,SALW,EAKT,EALS,CAAZ;;AAOA,YAAI,KAAKjH,KAAL,CAAWsB,IAAX,KAAoB,OAApB,IAA+B,KAAKtB,KAAL,CAAWsB,IAAX,KAAoB,aAAvD,EAAsE;AAClE,iBAAKyG,IAAL;AACH;;AAED,aAAK3H,QAAL,CAAc,EAAEF,YAAF,EAAd;;AAEA,YAAI,KAAKF,KAAL,CAAW+G,QAAf,EAAyB;AACrB,iBAAK/G,KAAL,CAAW+G,QAAX,CAAoB7G,KAApB;AACH;AACJ,K;;qBAGD6D,kB,iCAAqB;AACjB,aAAK3D,QAAL,CAAc;AACVL,oBAAQ;AADE,SAAd;;AAIA,YAAI,KAAKC,KAAL,CAAWgI,cAAf,EAA+B;AAC3B,iBAAKhI,KAAL,CAAWgI,cAAX;AACH;AACJ,K;;qBAGDxD,iB,8BAAkBgB,K,EAAOiB,e,EAAiB;AACtC,YAAI1G,SAAS,KAAK+B,SAAL,EAAb;;AAEA,gBAAQ0D,MAAMG,KAAd;AACI,iBAAK,uBAAasC,UAAlB;AACA,iBAAK,uBAAaC,QAAlB;AACI1C,sBAAM2C,cAAN;AACA,qBAAKvB,uBAAL,CAA6BH,eAA7B;AACA;AACJ,iBAAK,uBAAab,KAAlB;AACA,iBAAK,uBAAaC,KAAlB;AACIL,sBAAM2C,cAAN;AACA,qBAAK/H,QAAL,CAAc;AACVL,4BAAQ,KAAKC,KAAL,CAAWsB,IAAX,KAAoB,OAApB,GAA8B,IAA9B,GAAqC,CAACvB;AADpC,iBAAd;AAGA,qBAAKqI,WAAL;AACA;AACJ,iBAAK,uBAAaC,MAAlB;AACI7C,sBAAM2C,cAAN;AACA,qBAAK/H,QAAL,CAAc;AACVL,4BAAQ;AADE,iBAAd;AAGA,qBAAK2C,MAAL,CAAYoE,KAAZ;AACA;AApBR;;AAuBA,YAAI,KAAK9G,KAAL,CAAW8F,SAAf,EAA0B;AACtB,iBAAK9F,KAAL,CAAW8F,SAAX,CAAqBN,KAArB;AACH;AACJ,K;;qBAGDnC,iB,8BAAkBmC,K,EAAO;AACrB,YAAI,CAAC,KAAKxF,KAAL,CAAWgB,QAAhB,EAA0B;AACtB,iBAAKC,YAAL;AACH;;AAED,YAAI,KAAKjB,KAAL,CAAWmG,OAAf,EAAwB;AACpB,iBAAKnG,KAAL,CAAWmG,OAAX,CAAmB,KAAKH,eAAL,CAAqBR,KAArB,CAAnB;AACH;AACJ,K;;qBAGDlC,gB,6BAAiBkC,K,EAAO;AACpB,YAAI,CAAC,KAAKxF,KAAL,CAAWgB,QAAhB,EAA0B;AACtB,iBAAKC,YAAL;AACH;;AAED,YAAI,KAAKjB,KAAL,CAAWuG,MAAf,EAAuB;AACnB,iBAAKvG,KAAL,CAAWuG,MAAX,CAAkB,KAAKP,eAAL,CAAqBR,KAArB,CAAlB;AACH;AACJ,K;;qBAGDpC,iB,8BAAkBoC,K,EAAO;AACrB,YAAI,KAAKxF,KAAL,CAAWyF,OAAf,EAAwB;AACpB,iBAAKzF,KAAL,CAAWyF,OAAX,CAAmB,KAAKO,eAAL,CAAqBR,KAArB,CAAnB;AACH;AACJ,K;;qBAGDrD,mB,gCAAoBmG,S,EAAW;AAAA;;AAC3B,aAAKlI,QAAL,CAAc;AACVN,sBAAUwI;AADA,SAAd,EAEG,YAAM;AACL,gBAAI,QAAK3H,KAAT,EAAgB;AACZ,wBAAKC,cAAL;AACA,wBAAKC,iBAAL;AACH;AACJ,SAPD;AAQH,K;;qBAGD0E,sB,qCAAyB;AACrB,aAAKnF,QAAL,CAAc;AACVL,oBAAQ;AADE,SAAd;AAGH,K;;AAED;;;;;;;;qBAMAuG,O,sBAAU;AACN,eAAO,KAAKvE,IAAZ;AACH,K;;AAED;;;;;;;qBAKA+E,K,oBAAQ;AAAA;;AACJ,YAAI,KAAK5D,YAAT,EAAuB;AACnB,iBAAKA,YAAL,CAAkB4D,KAAlB;AACH,SAFD,MAEO;AACH,iBAAKpE,MAAL,CAAYoE,KAAZ;;AAEA,iBAAK1G,QAAL,CAAc;AACVL,wBAAQ;AADE,aAAd,EAEG,YAAM;AACL,wBAAKqI,WAAL;AACH,aAJD;AAKH;AACJ,K;;AAED;;;;;;;qBAKAL,I,mBAAO;AACH,YAAIQ,SAASC,aAAb,EAA4B;AACxBD,qBAASC,aAAT,CAAuBT,IAAvB;AACH;AACJ,K;;AAED;;;;;;;qBAKAU,Q,uBAAW;AACP,YAAIC,cAAc,KAAK3G,IAAL,CAAU4G,qBAAV,EAAlB;;AAEA,gCAAS;AACLC,qBAAUF,YAAYG,GAAZ,GAAkBC,OAAOC,WAA1B;AADJ,SAAT;AAGH,K;;qBAEDX,W,0BAAc;AACV,YAAI,KAAKxI,KAAL,CAAWE,QAAX,IAAuB,KAAKE,KAAL,CAAWoC,cAAX,KAA8B,OAAzD,EAAkE;;AAElE,YAAI4G,kBAAkB,KAAKC,kBAAL,EAAtB;;AAEA,YAAIC,OAAOF,gBAAgBrC,SAA3B;AACA,YAAIwC,OAAOH,gBAAgBI,UAA3B;;AAEA,aAAKlF,IAAL,CAAU4C,KAAV;AACAkC,wBAAgBrC,SAAhB,GAA4BuC,IAA5B;AACAF,wBAAgBI,UAAhB,GAA6BD,IAA7B;AACH,K;;AAED;;;;;qBAGAvC,uB,oCAAwBH,e,EAAiB;AACrC,YAAI4C,UAAU5C,gBAAgBH,OAAhB,EAAd;AACA,YAAIgD,YAAY,KAAK3I,KAAL,CAAW+F,YAAX,EAAhB;AACA,YAAI6C,aAAaF,QAAQG,YAAzB;;AAEA,YAAIF,SAAJ,EAAe;AACX,gBAAID,QAAQI,SAAR,GAAoBF,UAApB,GAAiCD,UAAU3C,SAAV,GAAsB2C,UAAUE,YAArE,EAAmF;AAC/E,wCAAS;AACLF,wCADK;AAELV,6BAASS,QAAQI,SAFZ;AAGLC;AAHK,iBAAT;AAKH,aAND,MAMO,IAAIL,QAAQI,SAAR,GAAoBH,UAAU3C,SAAlC,EAA6C;AAChD,wCAAS;AACL2C,wCADK;AAELV,6BAAUS,QAAQI,SAAR,GAAoBH,UAAUE,YAA/B,GAA+CD,UAFnD;AAGLG;AAHK,iBAAT;AAKH;AACJ;AACJ,K;;qBAEDzI,Y,2BAAe;AAAA;;AACX,YAAI0I,iBAAiB,CAAC,KAAK7H,SAAL,EAAtB;;AAEA,aAAK1B,QAAL,CAAc;AACVL,oBAAQ4J;AADE,SAAd,EAEG,YAAM;AACL,gBAAIA,kBAAkB,QAAKzF,IAA3B,EAAiC;AAC7B,wBAAKkE,WAAL;AACH;AACJ,SAND;AAOH,K;;qBAGDvH,iB,gCAAoB;AAChB,YAAI+I,cAAc,KAAKlH,MAAL,CAAY4D,OAAZ,GAAsBqC,qBAAtB,GAA8CnH,KAAhE;AACA,YAAIvB,cAAc,EAAE+D,UAAU4F,WAAZ,EAAlB;;AAEA,YAAI,KAAK5J,KAAL,CAAW6J,eAAf,EAAgC;AAC5B5J,wBAAYgE,QAAZ,GAAuB2F,WAAvB;AACH;;AAED,aAAKxJ,QAAL,CAAc,EAAEH,wBAAF,EAAd;AACH,K;;qBAGDW,c,6BAAiB;AACb,aAAKD,KAAL,CAAWmJ,SAAX,CAAqB,KAAKpH,MAAL,CAAY4D,OAAZ,EAArB;AACH,K;;qBAEDrB,e,4BAAgB5E,O,EAAS;AAAA;;AACrB,YAAIH,QAAQ,KAAKmB,QAAL,EAAZ;AACA,YAAI4F,SAAS,EAAb;;AAEA5G,gBAAQ6G,OAAR,CAAgB,UAAC3G,MAAD,EAAY;AACxB,gBAAIA,OAAOC,IAAP,KAAgB,OAAhB,IAA2B,CAAC,CAACD,OAAOE,OAAxC,EAAiD;AAC7C,oBAAI0G,cAAc,QAAKlC,eAAL,CAAqB1E,OAAOE,OAA5B,CAAlB;AACAwG,yBAASA,OAAOG,MAAP,CAAcD,WAAd,CAAT;AACH,aAHD,MAGO,IAAIjH,MAAM6J,OAAN,CAAcxJ,OAAOL,KAArB,MAAgC,CAAC,CAArC,EAAwC;AAC3C+G,uBAAOI,IAAP,CAAY9G,MAAZ;AACH;AACJ,SAPD;;AASA,eAAO0G,MAAP;AACH,K;;AAED;;;;;qBAGAnF,S,wBAAY;AACR,eAAO,KAAK9B,KAAL,CAAWD,MAAX,KAAsBiK,SAAtB,GAAkC,KAAKhK,KAAL,CAAWD,MAA7C,GAAsD,KAAKH,KAAL,CAAWG,MAAxE;AACH,K;;qBAEDiG,e,4BAAgBR,K,EAAO;AACnB,iCAAYA,KAAZ,IAAmBU,0BAAaV,MAAMU,MAAnB,IAA2BhG,OAAO,KAAKmB,QAAL,EAAlC,GAAnB;AACH,K;;AAED;;;;;qBAGAA,Q,uBAAW;AACP,eAAO,KAAKrB,KAAL,CAAWE,KAAX,IAAoB,KAAKN,KAAL,CAAWM,KAAtC;AACH,K;;AAED;;;;;qBAGA+I,kB,iCAAqB;AACjB,eAAO,KAAKgB,OAAL,CAAaC,2BAAb,IAA4C3B,SAAS4B,IAA5D;AACH,K;;;EA7zBgB,gBAAMC,S,WAkGhBC,Y,GAAe;AAClB/I,UAAM,OADY;AAElB6C,eAAW,SAFO;AAGlBnD,cAAU,KAHQ;AAIlBO,UAAM,GAJY;AAKlBoC,gBAAY,CAAC,aAAD,EAAgB,cAAhB,EAAgC,UAAhC,EAA4C,WAA5C,CALM;AAMlBnC,WAAO,SANW;AAOlBqI,qBAAiB,KAPC;AAQlBxJ,aAAS,EARS;AASlBkD,iBAAa,WATK;AAUlBnB,oBAAgB;AAVE,C,UAafkI,Y,GAAe;AAClBJ;AADkB,C;AA/GpBvK,M,CACK4K,S,2CAAY;AACf;AACAC,eAAW,oBAAKC,MAFD;AAGf;AACAnJ,UAAM,oBAAKoJ,KAAL,CAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,aAAnB,CAAX,CAJS;AAKf;AACAvG,eAAW,oBAAKuG,KAAL,CAAW,CAAC,SAAD,EAAY,MAAZ,CAAX,CANI;AAOf;AACAlJ,WAAO,oBAAKkJ,KAAL,CAAW,CAAC,SAAD,EAAY,WAAZ,CAAX,CARQ;AASf;AACA/G,gBAAY,oBAAKgH,OAAL,CAAa,oBAAKD,KAAL,CAAW,CAChC,UADgC,EACpB,YADoB,EACN,WADM,EACO,UADP,EACmB,aADnB,EACkC,aADlC,EACiD,WADjD,EAEhC,cAFgC,EAEhB,cAFgB,EAEA,aAFA,EAEe,eAFf,EAEgC,cAFhC,CAAX,CAAb,CAVG;AAcf;AACA1J,cAAU,oBAAK4J,IAfA;AAgBf;AACA7K,YAAQ,oBAAK6K,IAjBE;AAkBf;AACAf,qBAAiB,oBAAKe,IAnBP;AAoBf;AACA1K,WAAO,oBAAKyK,OAAL,CAAa,oBAAKE,SAAL,CAAe,CAC/B,oBAAKJ,MAD0B,EAE/B,oBAAKK,MAF0B,CAAf,CAAb,CArBQ;AAyBf;AACAzK,aAAS,oBAAKsK,OAAL,CAAa,oBAAKI,KAAL,CAAW;AAC7B;AACAvK,cAAM,oBAAKkK,KAAL,CAAW,CAAC,MAAD,EAAS,OAAT,CAAX,CAFuB;AAG7B;AACAxK,eAAO,oBAAK2K,SAAL,CAAe,CAClB,oBAAKJ,MADa,EAElB,oBAAKK,MAFa,CAAf,CAJsB;AAQ7B;AACAlG,cAAM,oBAAKoG,IATkB;AAU7B;AACAjG,oBAAY,oBAAK0F,MAXY;AAY7B;AACA9F,qBAAa,oBAAKqG,IAbW;AAc7B;AACA5F,qBAAa,oBAAKqF,MAfW;AAgB7B;AACA5F,cAAM,oBAAKmG,IAjBkB;AAkB7B;AACAvK,iBAAS,oBAAKwK,KAnBe;AAoB7B;AACAjL,eAAO,oBAAKkL;AArBiB,KAAX,CAAb,CA1BM;AAiDf;AACA3J,UAAM,oBAAKmJ,KAAL,CAAW,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAX,CAlDS;AAmDf;AACA1I,QAAI,oBAAKyI,MApDM;AAqDf;AACAxI,UAAM,oBAAKwI,MAtDI;AAuDf;AACA9I,WAAO,oBAAKqJ,IAxDG;AAyDf;AACAzH,iBAAa,oBAAKkH,MA1DH;AA2Df;AACAnI,UAAM,oBAAK0I,IA5DI;AA6Df;AACAnJ,WAAO,oBAAKmJ,IA9DG;AA+Df;AACA5I,oBAAgB,oBAAKsI,KAAL,CAAW,CAAC,QAAD,EAAW,OAAX,CAAX,CAhED;AAiEf;AACApF,iBAAa,oBAAK0F,IAlEH;AAmEf;AACApH,qBAAiB,oBAAKkH,MApEP;AAqEf;AACAjH,0BAAsB,oBAAKiH,MAtEZ;AAuEf;AACAK,WAAO,oBAAKT,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CAxEQ;AAyEf;AACAvE,aAAS,oBAAKiF,IA1EC;AA2Ef;AACA7E,YAAQ,oBAAK6E,IA5EE;AA6Ef;AACArF,mBAAe,oBAAKqF,IA9EL;AA+Ef;AACAnF,kBAAc,oBAAKmF,IAhFJ;AAiFf;AACAhF,iBAAa,oBAAKgF,IAlFH;AAmFf;AACA5E,gBAAY,oBAAK4E,IApFF;AAqFf;AACA3F,aAAS,oBAAK2F,IAtFC;AAuFf;AACApD,oBAAgB,oBAAKoD,IAxFN;AAyFf;AACArE,cAAU,oBAAKqE,IA1FA;AA2Ff;AACAtF,eAAW,oBAAKsF,IA5FD;AA6Ff;AACAtI,yBAAqB,oBAAKsI;AA9FX,C;kBA+zBRzL,M","file":"select.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport createFragment from 'react-addons-create-fragment';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Button from '../button/button';\nimport IconButton from '../icon-button/icon-button';\nimport IconArrowDown from '../icon/ui/arrow-down';\nimport IconArrowUp from '../icon/ui/arrow-up';\nimport Menu from '../menu/menu';\nimport Mq from '../mq/mq';\nimport Popup from '../popup/popup';\nimport PopupHeader from '../popup-header/popup-header';\nimport ResizeSensor from '../resize-sensor/resize-sensor';\n\nimport cn from '../cn';\nimport { HtmlElement } from '../lib/prop-types';\nimport keyboardCode from '../lib/keyboard-code';\nimport performance from '../performance';\nimport scrollTo from '../lib/scroll-to';\nimport { SCROLL_TO_CORRECTION, SCROLL_TO_NORMAL_DURATION } from '../vars';\n\n/**\n * Элемент кнопки для выпадающего списка.\n */\n@cn('select-button')\nclass SelectButton extends Button {}\n\n/**\n * @typedef {Object} CheckedOption\n * @property {String} value Уникальное значение, которое будет отправлено на сервер, если вариант выбран\n * @property {String} text Текст варианта\n * @property {String} checkedText Текст, который будет отображаться при выборе\n * @property {Icon} icon Иконка варианта\n */\n\n/**\n * Компонент выпадающего списка.\n */\n@cn('select', SelectButton, Popup)\n@performance(true)\nclass Select extends React.Component {\n    static propTypes = {\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Тип выпадающего списка */\n        mode: Type.oneOf(['check', 'radio', 'radio-check']),\n        /** Размещение заголовка групп: обычное или в одну строку с первым элементом группы */\n        groupView: Type.oneOf(['default', 'line']),\n        /** Управление возможностью компонента занимать всю ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Направления, в которые может открываться попап компонента */\n        directions: Type.arrayOf(Type.oneOf([\n            'top-left', 'top-center', 'top-right', 'left-top', 'left-center', 'left-bottom', 'right-top',\n            'right-center', 'right-bottom', 'bottom-left', 'bottom-center', 'bottom-right'\n        ])),\n        /** Управление возможностью редактирования значения */\n        disabled: Type.bool,\n        /** Управление видимостью выпадающего списка */\n        opened: Type.bool,\n        /** Ширинa выпадающего списка равна ширине кнопки */\n        equalPopupWidth: Type.bool,\n        /** Список выбранных значений */\n        value: Type.arrayOf(Type.oneOfType([\n            Type.string,\n            Type.number\n        ])),\n        /** Список вариантов выбора */\n        options: Type.arrayOf(Type.shape({\n            /** Тип списка вариантов */\n            type: Type.oneOf(['item', 'group']),\n            /** Уникальное значение, которое будет отправлено на сервер, если вариант выбран */\n            value: Type.oneOfType([\n                Type.string,\n                Type.number\n            ]),\n            /** Текст варианта */\n            text: Type.node,\n            /** Текст варианта для нативного режима */\n            nativeText: Type.string,\n            /** Отображение варианта */\n            description: Type.node,\n            /** Текст, который будет отображаться при выборе */\n            checkedText: Type.string,\n            /** Иконка варианта */\n            icon: Type.node,\n            /** Список вариантов, только для type='group' */\n            content: Type.array,\n            /** Только для type='item': свойства для компонента [MenuItem](#!/MenuItem) */\n            props: Type.object\n        })),\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Уникальный идентификатор блока */\n        id: Type.string,\n        /** Уникальное имя блока */\n        name: Type.string,\n        /** Лейбл для поля */\n        label: Type.node,\n        /** Подсказка в поле */\n        placeholder: Type.string,\n        /** Подсказка под полем */\n        hint: Type.node,\n        /** Отображение ошибки */\n        error: Type.node,\n        /** Управление нативным режимом на мобильных устройствах */\n        mobileMenuMode: Type.oneOf(['native', 'popup']),\n        /** Подсказка над меню в мобильном режиме */\n        mobileTitle: Type.node,\n        /** Смещение в пикселях всплывающего окна относительно основного направления (только на десктопе) */\n        popupMainOffset: Type.number,\n        /** Смещение в пикселях всплывающего окна относительно второстепенного направления (только на десктопе) */\n        popupSecondaryOffset: Type.number,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Обработчик фокуса на компоненте */\n        onFocus: Type.func,\n        /** Обработчик потери фокуса компонентом */\n        onBlur: Type.func,\n        /** Обработчик фокуса на кнопке */\n        onButtonFocus: Type.func,\n        /** Обработчик потери у кнопки */\n        onButtonBlur: Type.func,\n        /** Обработчик фокуса на меню */\n        onMenuFocus: Type.func,\n        /** Обработчик потери фокуса у меню */\n        onMenuBlur: Type.func,\n        /** Обработчик клика по кнопке компонента */\n        onClick: Type.func,\n        /** Обработчик клика вне компонента */\n        onClickOutside: Type.func,\n        /** Обработчик изменения значения */\n        onChange: Type.func,\n        /** Обработчик нажатия на клавишу */\n        onKeyDown: Type.func,\n        /** Кастомный метод рендера содержимого кнопки, принимает на вход: массив элементов типа CheckedOption */\n        renderButtonContent: Type.func\n    };\n\n    static defaultProps = {\n        mode: 'check',\n        groupView: 'default',\n        disabled: false,\n        size: 'm',\n        directions: ['bottom-left', 'bottom-right', 'top-left', 'top-right'],\n        width: 'default',\n        equalPopupWidth: false,\n        options: [],\n        placeholder: 'Выберите:',\n        mobileMenuMode: 'native'\n    };\n\n    static contextTypes = {\n        positioningContainerElement: HtmlElement\n    };\n\n    state = {\n        hasGroup: false,\n        isMobile: false,\n        opened: !!this.props.opened,\n        popupStyles: {},\n        value: this.props.value || []\n    };\n\n    /**\n     * @type {HTMLDivElement}\n     */\n    root;\n\n    /**\n     * @type {Button}\n     */\n    button;\n\n    /**\n     * @type {Popup}\n     */\n    popup;\n\n    /**\n     * @type {Menu}\n     */\n    menu;\n\n    componentWillMount() {\n        this.setState({\n            hasGroup: this.props.options.some(option => !!(option.type === 'group' && !!option.content))\n        });\n    }\n\n    componentDidMount() {\n        if (this.popup) {\n            this.setPopupTarget();\n            this.updatePopupStyles();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.popup) {\n            this.setPopupTarget();\n            this.updatePopupStyles();\n        }\n\n        if (this.state.opened && nextProps.disabled) {\n            this.toggleOpened();\n        }\n\n        this.setState({\n            hasGroup: this.props.options.some(option => !!(option.type === 'group' && !!option.content))\n        });\n    }\n\n    render(cn, SelectButton, Popup) {\n        let value = this.getValue();\n\n        return (\n            <div\n                className={ cn({\n                    mode: this.props.mode,\n                    size: this.props.size,\n                    width: this.props.width,\n                    checked: value.length > 0,\n                    disabled: this.props.disabled,\n                    'has-label': !!this.props.label,\n                    'has-value': !!value,\n                    invalid: !!this.props.error,\n                    opened: this.getOpened()\n                }) }\n                ref={ (root) => { this.root = root; } }\n            >\n                <span className={ cn('inner') }>\n                    <input\n                        id={ this.props.id }\n                        name={ this.props.name }\n                        type='hidden'\n                        value={ value }\n                    />\n                    {\n                        !!this.props.label &&\n                        <span className={ cn('top') }>\n                            { this.props.label }\n                        </span>\n                    }\n                    { this.renderButton(cn, SelectButton) }\n                    <Mq\n                        query='--small-only'\n                        touch={ true }\n                        onMatchChange={ this.handleMqMatchChange }\n                    >\n                        {\n                            this.props.mobileMenuMode === 'native' &&\n                            this.renderNativeSelect(cn)\n                        }\n                    </Mq>\n                    {\n                        (this.props.error || this.props.hint) &&\n                        <span className={ cn('sub') }>\n                            { this.props.error || this.props.hint }\n                        </span>\n                    }\n                    {\n                        (!this.state.isMobile ||\n                        (this.state.isMobile && this.props.mobileMenuMode === 'popup')) &&\n                        this.renderPopup(cn, Popup)\n                    }\n                </span>\n            </div>\n        );\n    }\n\n    renderButton(cn, SelectButton) {\n        let tickSize;\n        let ToggledIcon;\n        let opened = this.getOpened();\n\n        switch (opened) {\n            case true: ToggledIcon = IconArrowUp; break;\n            case false: ToggledIcon = IconArrowDown; break;\n        }\n\n        switch (this.props.size) {\n            case 's': case 'm': tickSize = 's'; break;\n            case 'l': tickSize = 'm'; break;\n            case 'xl': tickSize = 'l'; break;\n        }\n\n        return (\n            <SelectButton\n                ref={ (button) => { this.button = button; } }\n                size={ this.props.size }\n                disabled={ this.props.disabled }\n                focused={ this.getOpened() }\n                onClick={ this.handleButtonClick }\n                onFocus={ this.handleButtonFocus }\n                onBlur={ this.handleButtonBlur }\n            >\n                { this.renderButtonContent() }\n                <IconButton\n                    className={ cn('tick') }\n                    key='addon-icon'\n                    size={ this.props.size }\n                    tag='span'\n                >\n                    <ToggledIcon size={ tickSize } />\n                </IconButton>\n                <ResizeSensor key='addon-sensor' onResize={ this.updatePopupStyles } />\n            </SelectButton>\n        );\n    }\n\n    renderNativeSelect(cn) {\n        let isCheckMode = this.props.mode === 'check';\n        let hasEmptyOptGroup = isCheckMode || this.state.hasGroup;\n        let hasEmptyOption = !isCheckMode && !this.state.hasGroup;\n        let value = this.getValue();\n\n        if (!isCheckMode) {\n            value = value.length ? value[0] : '';\n        }\n\n        return (\n            <select\n                ref={ (nativeSelect) => { this.nativeSelect = nativeSelect; } }\n                className={ cn('native-control') }\n                disabled={ this.props.disabled }\n                multiple={ isCheckMode && 'multiple' }\n                value={ value }\n                onChange={ this.handleNativeOptionCheck }\n                onClick={ this.handleNativeClick }\n                onFocus={ this.handleNativeFocus }\n                onBlur={ this.handleNativeBlur }\n            >\n                {\n                    /*\n                        Хак с пустым <optgroup> — для фикса странного поведения select с атрибутом multiple на iOS7+:\n                        1. If no option is selected, it selects the first option in the list.\n                        2. If one option is selected, it deselects that option.\n                        3. If multiple options are selected, it deselects the last option to be tapped.\n                        4. If an option previously selected is deselected, it reselects the option.\n                        https://discussions.apple.com/message/23745665\n                        https://discussions.apple.com/message/24694954\n                    */\n                    hasEmptyOptGroup &&\n                    <optgroup\n                        disabled={ true }\n                        label={ this.props.placeholder }\n                    />\n                }\n                {\n                    hasEmptyOption &&\n                    <option disabled={ true } value=''>\n                        { this.props.placeholder }\n                    </option>\n                }\n                { this.renderNativeOptionsList(this.props.options) }\n            </select>\n        );\n    }\n\n    renderPopup(cn, Popup) {\n        let optionsList = this.renderOptionsList(this.props.options);\n        let opened = this.getOpened();\n        let value = this.getValue();\n\n        return (\n            <Popup\n                key='popup'\n                ref={ (popup) => { this.popup = popup; } }\n                for={ this.props.name }\n                className={ cn('popup') }\n                directions={ this.props.directions }\n                height='adaptive'\n                padded={ false }\n                mainOffset={ this.props.popupMainOffset }\n                secondaryOffset={ this.props.popupSecondaryOffset }\n                size={ this.props.size }\n                target={ this.state.isMobile ? 'screen' : 'anchor' }\n                header={ this.state.isMobile && this.renderMobileHeader(cn) }\n                visible={ opened }\n                onClickOutside={ this.handleClickOutside }\n                minWidth={ this.state.popupStyles.minWidth }\n                maxWidth={ this.state.popupStyles.maxWidth }\n            >\n                <Menu\n                    ref={ (menu) => { this.menu = menu; } }\n                    className={ cn('menu') }\n                    size={ this.props.size }\n                    disabled={ this.props.disabled }\n                    mode={ this.props.mode }\n                    groupView={ this.props.groupView }\n                    content={ optionsList }\n                    onItemCheck={ this.handleOptionCheck }\n                    checkedItems={ value }\n                    onFocus={ this.handleMenuFocus }\n                    onBlur={ this.handleMenuBlur }\n                    onHighlightItem={ this.handleMenuHighlightItem }\n                    onKeyDown={ this.handleMenuKeyDown }\n                />\n            </Popup>\n        );\n    }\n\n    renderOptionsList(options) {\n        return (\n            options.map((option) => {\n                if (option.type === 'group' && !!option.content) {\n                    let content = this.renderOptionsList(option.content);\n\n                    return ({\n                        type: 'group',\n                        title: option.title,\n                        content\n                    });\n                }\n\n                let content = option.description || option.text;\n\n                return ({\n                    props: option.props,\n                    value: option.value,\n                    content: createFragment({ icon: option.icon, content })\n                });\n            })\n        );\n    }\n\n    renderNativeOptionsList(options) {\n        let groupKey = 0;\n\n        return (\n            options.map((option) => {\n                if (option.type === 'group' && !!option.content) {\n                    let content = this.renderNativeOptionsList(option.content);\n\n                    groupKey += 1;\n\n                    return (\n                        <optgroup\n                            key={ `group_${groupKey}` }\n                            label={ option.title }\n                        >\n                            { content }\n                        </optgroup>\n                    );\n                }\n\n                return (\n                    <option\n                        key={ option.value }\n                        value={ option.value }\n                    >\n                        { option.nativeText || option.text }\n                    </option>\n                );\n            })\n        );\n    }\n\n    renderButtonContent() {\n        let checkedItems = this.getCheckedItems(this.props.options);\n\n        if (this.props.renderButtonContent) {\n            return this.props.renderButtonContent(checkedItems);\n        }\n\n        let checkedItemsText = checkedItems.map(item => item.checkedText || item.text).join(', ');\n        return checkedItemsText || this.props.placeholder;\n    }\n\n    renderMobileHeader(cn) {\n        return (\n            <PopupHeader\n                className={ cn('mobile-header') }\n                size={ this.props.size }\n                title={ this.props.mobileTitle || this.props.placeholder }\n                onCloserClick={ this.handlePopupCloserClick }\n            />\n        );\n    }\n\n    @autobind\n    handleButtonClick(event) {\n        if (!this.props.disabled) {\n            this.toggleOpened();\n        }\n\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n\n    @autobind\n    handleButtonKeyDown(event) {\n        if (!this.props.disabled) {\n            if (event.which === keyboardCode.ENTER || event.which === keyboardCode.SPACE) {\n                this.toggleOpened();\n            }\n        }\n\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n\n    @autobind\n    handleButtonFocus(event) {\n        if (this.props.onButtonFocus) {\n            this.props.onButtonFocus(this.getRevisedEvent(event));\n        }\n    }\n\n    @autobind\n    handleButtonBlur(event) {\n        if (this.props.onButtonBlur) {\n            this.props.onButtonBlur(this.getRevisedEvent(event));\n        }\n    }\n\n    @autobind\n    handleMenuFocus(event) {\n        event.target.value = this.getValue();\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n\n        if (this.props.onMenuFocus) {\n            this.props.onMenuFocus(event);\n        }\n    }\n\n    @autobind\n    handleMenuBlur(event) {\n        event.target.value = this.getValue();\n\n        if (event.relatedTarget !== this.button.getNode()) {\n            this.setState({\n                opened: false\n            });\n        }\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n\n        if (this.props.onMenuBlur) {\n            this.props.onMenuBlur(event);\n        }\n    }\n\n    @autobind\n    handleMenuHighlightItem(highlightedItem) {\n        if (!this.getOpened() && highlightedItem) {\n            this.popup.getInnerNode().scrollTop = 0;\n            this.scrollToHighlightedItem(highlightedItem);\n        }\n    }\n\n    @autobind\n    handleOptionCheck(value) {\n        let opened = this.getOpened();\n\n        this.setState(\n            { value, opened: this.props.mode === 'check' },\n            () => {\n                // Если у Select-а закрылось выпадающее меню,\n                // то возвращаем фокус на кнопку Select\n                // после выбора опции.\n                let newOpened = this.getOpened();\n                if (!newOpened && opened !== newOpened) {\n                    this.button.focus();\n                }\n            }\n        );\n\n        if (this.props.onChange) {\n            this.props.onChange(value);\n        }\n    }\n\n    @autobind\n    handleNativeOptionCheck(event) {\n        function getFlattenedPropOptions(options) {\n            let result = [];\n\n            options.forEach((option) => {\n                if (option.type === 'group' && !!option.content) {\n                    let findInGroup = getFlattenedPropOptions(option.content);\n                    result = result.concat(findInGroup);\n                } else {\n                    result.push(option);\n                }\n            });\n\n            return result;\n        }\n\n        let hasEmptyOption = this.props.mode !== 'check' && !this.state.hasGroup;\n        let domOptions = Array.from(event.currentTarget.options).filter((option, index) => !(\n            hasEmptyOption && option.disabled && index === 0\n        ));\n        let flattenedPropOptions = getFlattenedPropOptions(this.props.options);\n        let value = domOptions.reduce((result, item, index) => {\n            if (item.selected) {\n                result.push(flattenedPropOptions[index].value);\n            }\n            return result;\n        }, []);\n\n        if (this.props.mode === 'radio' || this.props.mode === 'radio-check') {\n            this.blur();\n        }\n\n        this.setState({ value });\n\n        if (this.props.onChange) {\n            this.props.onChange(value);\n        }\n    }\n\n    @autobind\n    handleClickOutside() {\n        this.setState({\n            opened: false\n        });\n\n        if (this.props.onClickOutside) {\n            this.props.onClickOutside();\n        }\n    }\n\n    @autobind\n    handleMenuKeyDown(event, highlightedItem) {\n        let opened = this.getOpened();\n\n        switch (event.which) {\n            case keyboardCode.DOWN_ARROW:\n            case keyboardCode.UP_ARROW:\n                event.preventDefault();\n                this.scrollToHighlightedItem(highlightedItem);\n                break;\n            case keyboardCode.ENTER:\n            case keyboardCode.SPACE:\n                event.preventDefault();\n                this.setState({\n                    opened: this.props.mode === 'check' ? true : !opened\n                });\n                this.focusOnMenu();\n                break;\n            case keyboardCode.ESCAPE:\n                event.preventDefault();\n                this.setState({\n                    opened: false\n                });\n                this.button.focus();\n                break;\n        }\n\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n\n    @autobind\n    handleNativeFocus(event) {\n        if (!this.props.disabled) {\n            this.toggleOpened();\n        }\n\n        if (this.props.onFocus) {\n            this.props.onFocus(this.getRevisedEvent(event));\n        }\n    }\n\n    @autobind\n    handleNativeBlur(event) {\n        if (!this.props.disabled) {\n            this.toggleOpened();\n        }\n\n        if (this.props.onBlur) {\n            this.props.onBlur(this.getRevisedEvent(event));\n        }\n    }\n\n    @autobind\n    handleNativeClick(event) {\n        if (this.props.onClick) {\n            this.props.onClick(this.getRevisedEvent(event));\n        }\n    }\n\n    @autobind\n    handleMqMatchChange(isMatched) {\n        this.setState({\n            isMobile: isMatched\n        }, () => {\n            if (this.popup) {\n                this.setPopupTarget();\n                this.updatePopupStyles();\n            }\n        });\n    }\n\n    @autobind\n    handlePopupCloserClick() {\n        this.setState({\n            opened: false\n        });\n    }\n\n    /**\n     * Возвращает корневой `HTMLElement` компонента.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getNode() {\n        return this.root;\n    }\n\n    /**\n     * Устанавливает фокус на компонент.\n     *\n     * @public\n     */\n    focus() {\n        if (this.nativeSelect) {\n            this.nativeSelect.focus();\n        } else {\n            this.button.focus();\n\n            this.setState({\n                opened: true\n            }, () => {\n                this.focusOnMenu();\n            });\n        }\n    }\n\n    /**\n     * Убирает фокус с компонента.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n\n    /**\n     * Скроллит страницу до компонента.\n     *\n     * @public\n     */\n    scrollTo() {\n        let elementRect = this.root.getBoundingClientRect();\n\n        scrollTo({\n            targetY: (elementRect.top + window.pageYOffset) - SCROLL_TO_CORRECTION\n        });\n    }\n\n    focusOnMenu() {\n        if (this.state.isMobile && this.props.mobileMenuMode === 'popup') return;\n\n        let scrollContainer = this.getScrollContainer();\n\n        let posX = scrollContainer.scrollTop;\n        let posY = scrollContainer.scrollLeft;\n\n        this.menu.focus();\n        scrollContainer.scrollTop = posX;\n        scrollContainer.scrollLeft = posY;\n    }\n\n    /**\n     * @param {MenuItem} highlightedItem Выбранный в текущий момент пункт меню\n     */\n    scrollToHighlightedItem(highlightedItem) {\n        let element = highlightedItem.getNode();\n        let container = this.popup.getInnerNode();\n        let correction = element.offsetHeight;\n\n        if (container) {\n            if (element.offsetTop + correction > container.scrollTop + container.offsetHeight) {\n                scrollTo({\n                    container,\n                    targetY: element.offsetTop,\n                    duration: SCROLL_TO_NORMAL_DURATION\n                });\n            } else if (element.offsetTop < container.scrollTop) {\n                scrollTo({\n                    container,\n                    targetY: (element.offsetTop - container.offsetHeight) + correction,\n                    duration: SCROLL_TO_NORMAL_DURATION\n                });\n            }\n        }\n    }\n\n    toggleOpened() {\n        let newOpenedState = !this.getOpened();\n\n        this.setState({\n            opened: newOpenedState\n        }, () => {\n            if (newOpenedState && this.menu) {\n                this.focusOnMenu();\n            }\n        });\n    }\n\n    @autobind\n    updatePopupStyles() {\n        let buttonWidth = this.button.getNode().getBoundingClientRect().width;\n        let popupStyles = { minWidth: buttonWidth };\n\n        if (this.props.equalPopupWidth) {\n            popupStyles.maxWidth = buttonWidth;\n        }\n\n        this.setState({ popupStyles });\n    }\n\n    @autobind\n    setPopupTarget() {\n        this.popup.setTarget(this.button.getNode());\n    }\n\n    getCheckedItems(options) {\n        let value = this.getValue();\n        let result = [];\n\n        options.forEach((option) => {\n            if (option.type === 'group' && !!option.content) {\n                let findInGroup = this.getCheckedItems(option.content);\n                result = result.concat(findInGroup);\n            } else if (value.indexOf(option.value) !== -1) {\n                result.push(option);\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    getOpened() {\n        return this.props.opened !== undefined ? this.props.opened : this.state.opened;\n    }\n\n    getRevisedEvent(event) {\n        return { ...event, target: { ...event.target, value: this.getValue() } };\n    }\n\n    /**\n     * @returns {String|Number}\n     */\n    getValue() {\n        return this.props.value || this.state.value;\n    }\n\n    /**\n     * @returns {HTMLElement}\n     */\n    getScrollContainer() {\n        return this.context.positioningContainerElement || document.body;\n    }\n}\n\nexport default Select;\n"]}