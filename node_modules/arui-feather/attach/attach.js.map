{"version":3,"sources":["attach/attach.jsx"],"names":["MULTIPLE_TEXTS","getDeclension","number","endingList","endingIndex","isEqualArray","array1","array2","length","every","item","index","Attach","state","focused","hovered","value","componentWillReceiveProps","nextProps","nextValue","input","setState","render","cn","size","props","disabled","handleMouseEnter","handleMouseLeave","root","renderButton","renderStatusText","buttonProps","className","icon","id","accept","multiple","name","handleInputChange","tabIndex","handleButtonClick","handleFocus","handleBlur","buttonContent","files","undefined","content","map","file","join","handleClearClick","noFileText","event","performChange","Array","from","target","onClick","onFocus","onBlur","onMouseEnter","onMouseLeave","focus","blur","shouldFireChange","onChange","Component","defaultProps","propTypes","array","string","node","shape","text","rightAddons","leftAddons","view","oneOf","type","tag","width","bool","pseudo","title","togglable","checked","theme","func","onMouseDown","onMouseUp","onKeyDown","onKeyUp"],"mappings":"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","file":"attach.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Button from '../button/button';\nimport IconAttachment from '../icon/action/attachment';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\nconst MULTIPLE_TEXTS = ['файл', 'файла', 'файлов'];\n\n/**\n * Возвращает слово в нужном склонении.\n *\n * @param {Number} number Количество\n * @param {Array.<String>} endingList Варианты слов, например: 'день', 'дня', 'дней'\n * @returns {String}\n */\nfunction getDeclension(number, endingList) {\n    let endingIndex;\n\n    number %= 100;\n\n    if (number >= 11 && number <= 19) {\n        endingIndex = 2;\n    } else {\n        switch (number % 10) {\n            case 1:\n                endingIndex = 0;\n                break;\n            case 2:\n            case 3:\n            case 4:\n                endingIndex = 1;\n                break;\n            default:\n                endingIndex = 2;\n        }\n    }\n\n    return endingList[endingIndex];\n}\n\n/**\n * Производит поэлементное сравнение массивов.\n *\n * @param {Array} array1 Первый массив\n * @param {Array} array2 Второй массив\n * @returns {Boolean}\n */\nfunction isEqualArray(array1, array2) {\n    if (array1 === array2) {\n        return true;\n    }\n\n    return array1\n        && array2\n        && array1.length === array2.length\n        && array1.every((item, index) => item === array2[index]);\n}\n\n/**\n * Компонент прикрепления файлов.\n */\n@cn('attach')\n@performance()\nclass Attach extends React.Component {\n    static propTypes = {\n        /** Содержимое поля ввода, указанное по умолчанию. Принимает массив объектов типа File или null. */\n        value: Type.array, // eslint-disable-line react/forbid-prop-types\n        /** Уникальное имя блока */\n        name: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Иконка */\n        icon: Type.node,\n        /** Последовательность перехода между контролами при нажатии на Tab */\n        tabIndex: Type.number,\n        /** Текст для случая, когда файл не загружен */\n        noFileText: Type.string,\n        /** Содержимое кнопки для выбора файла */\n        buttonContent: Type.node,\n        /** Свойства для кнопки */\n        buttonProps: Type.shape({\n            text: Type.node,\n            rightAddons: Type.node,\n            leftAddons: Type.node,\n            view: Type.oneOf(['default', 'action', 'extra']),\n            type: Type.oneOf(['button', 'reset', 'submit']),\n            tag: Type.oneOf(['button', 'span']),\n            width: Type.oneOf(['default', 'available']),\n            size: Type.oneOf(['s', 'm', 'l', 'xl']),\n            disabled: Type.bool,\n            pseudo: Type.bool,\n            id: Type.string,\n            name: Type.string,\n            title: Type.string,\n            tabIndex: Type.number,\n            togglable: Type.oneOf(['check', 'radio']),\n            checked: Type.bool,\n            theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n            className: Type.string,\n            onClick: Type.func,\n            onFocus: Type.func,\n            onBlur: Type.func,\n            onMouseEnter: Type.func,\n            onMouseLeave: Type.func,\n            onMouseDown: Type.func,\n            onMouseUp: Type.func,\n            onKeyDown: Type.func,\n            onKeyUp: Type.func\n        }),\n        /** Доступные для выбора MIME типы файлов */\n        accept: Type.string,\n        /** Управление возможностью изменения значения компонента */\n        disabled: Type.bool,\n        /** Управляет возможностью выбора нескольких файлов */\n        multiple: Type.bool,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Обработчик клика по компоненту кнопки */\n        onClick: Type.func,\n        /** Обработчик изменения значения 'value' */\n        onChange: Type.func,\n        /** Обработчик фокуса компонента */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса компонента */\n        onBlur: Type.func,\n        /** Обработчик события наведения курсора на кнопку */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с кнопки */\n        onMouseLeave: Type.func\n    };\n\n    static defaultProps = {\n        buttonContent: 'Выберите файл',\n        size: 'm',\n        disabled: false,\n        multiple: false,\n        tabIndex: 0,\n        noFileText: 'Нет файла'\n    };\n\n    state = {\n        focused: false,\n        hovered: false,\n        value: []\n    };\n\n    /**\n     * @type {HTMLInputElement}\n     */\n    input;\n\n    componentWillReceiveProps(nextProps) {\n        let nextValue = nextProps.value || [];\n\n        if (!isEqualArray(nextValue, this.state.value)) {\n            this.input.value = '';\n            this.setState({ value: nextValue });\n        }\n    }\n\n    render(cn) {\n        return (\n            <span\n                className={ cn({\n                    size: this.props.size,\n                    disabled: this.props.disabled,\n                    hovered: this.state.hovered,\n                    focused: this.state.focused\n                }) }\n                onMouseEnter={ this.handleMouseEnter }\n                onMouseLeave={ this.handleMouseLeave }\n                ref={ (root) => { this.root = root; } }\n            >\n                { this.renderButton(cn) }\n                { this.renderStatusText(cn) }\n            </span>\n        );\n    }\n\n    renderButton(cn) {\n        let buttonProps = {\n            ...this.props.buttonProps,\n            className: cn('button'),\n            disabled: this.props.disabled,\n            size: this.props.size,\n            icon: this.props.icon ? this.props.icon : <IconAttachment size={ this.props.size } />,\n            focused: this.state.focused\n        };\n\n        return (\n            <Button\n                { ...buttonProps }\n                tag='span'\n                leftAddons={\n                    <label\n                        className={ cn('label') }\n                        htmlFor={ this.props.id }\n                    >\n                        <input\n                            ref={ (input) => { this.input = input; } }\n                            className={ cn('control') }\n                            accept={ this.props.accept }\n                            disabled={ this.props.disabled }\n                            id={ this.props.id }\n                            multiple={ this.props.multiple }\n                            name={ this.props.name }\n                            size={ this.props.size }\n                            tabIndex='-1'\n                            type='file'\n                            onChange={ this.handleInputChange }\n                        />\n                    </label>\n                }\n                tabIndex={ this.props.tabIndex }\n                onClick={ this.handleButtonClick }\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n            >\n                { this.props.buttonContent }\n            </Button>\n        );\n    }\n\n    renderStatusText(cn) {\n        let files = this.props.value !== undefined\n            ? this.props.value || []\n            : this.state.value;\n\n        if (files && files.length > 0) {\n            let content = (files.length === 1)\n                ? files[0].name\n                : (\n                    <abbr\n                        title={ files.map(file => file.name).join() }\n                    >\n                        { files.length } { getDeclension(files.length, MULTIPLE_TEXTS) }\n                    </abbr>\n                );\n\n            return (\n                <span className={ cn('file') }>\n                    <span className={ cn('text') }>\n                        { content }\n                    </span>\n                    <button\n                        type='button'\n                        className={ cn('clear') }\n                        onClick={ this.handleClearClick }\n                    />\n                </span>\n            );\n        }\n\n        return (\n            <span className={ cn('no-file') }>\n                { this.props.noFileText }\n            </span>\n        );\n    }\n\n    @autobind\n    handleInputChange(event) {\n        this.performChange(Array.from(event.target.files));\n    }\n\n    @autobind\n    handleClearClick() {\n        this.input.value = '';\n        this.performChange([]);\n    }\n\n    @autobind\n    handleButtonClick() {\n        if (this.props.onClick) {\n            this.props.onClick();\n        }\n    }\n\n    @autobind\n    handleFocus() {\n        this.setState({ focused: true });\n\n        if (this.props.onFocus) {\n            this.props.onFocus();\n        }\n    }\n\n    @autobind\n    handleBlur() {\n        this.setState({ focused: false });\n\n        if (this.props.onBlur) {\n            this.props.onBlur();\n        }\n    }\n\n    @autobind\n    handleMouseEnter() {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter();\n        }\n    }\n\n    @autobind\n    handleMouseLeave() {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave();\n        }\n    }\n\n    /**\n     * Ставит фокус на контрол.\n     *\n     * @public\n     */\n    focus() {\n        this.input.focus();\n    }\n\n    /**\n     * Убирает фокус с контрола.\n     *\n     * @public\n     */\n    blur() {\n        this.input.blur();\n    }\n\n    performChange(value) {\n        let shouldFireChange = !isEqualArray(value, this.state.value);\n\n        this.setState({ value }, () => {\n            if (this.props.onChange && shouldFireChange) {\n                this.props.onChange(value.length ? value : null);\n            }\n        });\n    }\n}\n\nexport default Attach;\n"]}