'use strict';

exports.__esModule = true;
exports.default = exports.getCoordinates = undefined;

var _dec, _class, _desc, _value, _class2, _class3, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _autobind = require('core-decorators/lib/autobind');

var _autobind2 = _interopRequireDefault(_autobind);

var _performance = require('../performance');

var _performance2 = _interopRequireDefault(_performance);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var getCoordinates = exports.getCoordinates = function getCoordinates(_ref) {
    var touches = _ref.touches,
        changedTouches = _ref.changedTouches,
        clientX = _ref.clientX,
        clientY = _ref.clientY;
    return touches && changedTouches ? { clientX: (touches[0] || changedTouches[0]).clientX, clientY: (touches[0] || changedTouches[0]).clientY } : { clientX: clientX, clientY: clientY };
};

var Swipeable = (_dec = (0, _performance2.default)(), _dec(_class = (_class2 = (_temp2 = _class3 = function (_React$Component) {
    _inherits(Swipeable, _React$Component);

    function Swipeable() {
        var _temp, _this, _ret;

        _classCallCheck(this, Swipeable);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.swipeStartX = 0, _this.swipeStartY = 0, _this.deltaX = 0, _this.deltaY = 0, _temp), _possibleConstructorReturn(_this, _ret);
    }

    Swipeable.prototype.componentWillUnmount = function componentWillUnmount() {
        this.removeListeners();
    };

    Swipeable.prototype.render = function render() {
        return _react2.default.cloneElement(this.props.children, {
            onMouseDown: this.handleMouseDown,
            onTouchStart: this.handleTouchStart
        });
    };

    Swipeable.prototype.handleMouseDown = function handleMouseDown(event) {
        if (this.props.children.props.onMouseDown) {
            this.props.children.props.onMouseDown(event);
        }

        this.handleSwipeStart(event);

        document.addEventListener('mouseup', this.handleSwipeEnd);
        document.addEventListener('mouseup', this.removeListeners);
    };

    Swipeable.prototype.handleTouchStart = function handleTouchStart(event) {
        if (event.touches && event.touches.length > 1) return;

        if (this.props.children.props.onTouchStart) {
            this.props.children.props.onTouchStart(event);
        }

        this.handleSwipeStart(event);

        document.addEventListener('touchend', this.handleSwipeEnd);
        document.addEventListener('touchend', this.removeListeners);
        document.addEventListener('touchcancel', this.removeListeners);
    };

    Swipeable.prototype.handleSwipeStart = function handleSwipeStart(event) {
        var _getCoordinates = getCoordinates(event),
            clientX = _getCoordinates.clientX,
            clientY = _getCoordinates.clientY;

        this.swipeStartX = clientX;
        this.swipeStartY = clientY;
    };

    Swipeable.prototype.handleSwipeEnd = function handleSwipeEnd(event) {
        var _props = this.props,
            delta = _props.delta,
            onSwipe = _props.onSwipe;

        var _getCoordinates2 = getCoordinates(event),
            clientX = _getCoordinates2.clientX,
            clientY = _getCoordinates2.clientY;

        this.deltaX = this.swipeStartX - clientX;
        this.deltaY = this.swipeStartY - clientY;

        if (typeof onSwipe === 'function') {
            if (this.deltaX > delta) {
                onSwipe('left');
            } else if (this.deltaX < -delta) {
                onSwipe('right');
            } else if (this.deltaY > delta) {
                onSwipe('top');
            } else if (this.deltaY < -delta) {
                onSwipe('bottom');
            }
        }
    };

    Swipeable.prototype.removeListeners = function removeListeners() {
        document.removeEventListener('mouseup', this.handleSwipeEnd);
        document.removeEventListener('mouseup', this.removeListeners);
        document.removeEventListener('touchend', this.handleSwipeEnd);
        document.removeEventListener('touchend', this.removeListeners);
        document.removeEventListener('touchcancel', this.removeListeners);
        this.swipeStartX = 0;
        this.swipeStartY = 0;
        this.deltaX = 0;
        this.deltaY = 0;
    };

    return Swipeable;
}(_react2.default.Component), _class3.defaultProps = {
    delta: 100
}, _temp2), (_applyDecoratedDescriptor(_class2.prototype, 'handleMouseDown', [_autobind2.default], Object.getOwnPropertyDescriptor(_class2.prototype, 'handleMouseDown'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, 'handleTouchStart', [_autobind2.default], Object.getOwnPropertyDescriptor(_class2.prototype, 'handleTouchStart'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, 'handleSwipeStart', [_autobind2.default], Object.getOwnPropertyDescriptor(_class2.prototype, 'handleSwipeStart'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, 'handleSwipeEnd', [_autobind2.default], Object.getOwnPropertyDescriptor(_class2.prototype, 'handleSwipeEnd'), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, 'removeListeners', [_autobind2.default], Object.getOwnPropertyDescriptor(_class2.prototype, 'removeListeners'), _class2.prototype)), _class2)) || _class);
exports.default = Swipeable;
Swipeable.propTypes = process.env.NODE_ENV !== "production" ? {
    /** Число пикселей, на которое нужно сместиться, чтобы запустить функцию по свайпу */
    delta: _propTypes2.default.number,
    /** Функция запускаемая по свайпу. Принимает в качестве аргумента направление свайпа ('top', 'right', 'bottom', 'left')  */
    onSwipe: _propTypes2.default.func.isRequired,
    /** Дочерний компонент представленный в виде единичного элемента */
    children: _propTypes2.default.shape({
        props: _propTypes2.default.shape({
            onMouseDown: _propTypes2.default.func,
            onTouchStart: _propTypes2.default.func
        })
    }).isRequired
} : {};
//# sourceMappingURL=swipeable.js.map
