{"version":3,"sources":["swipeable/swipeable.jsx"],"names":["getCoordinates","touches","changedTouches","clientX","clientY","Swipeable","swipeStartX","swipeStartY","deltaX","deltaY","componentWillUnmount","removeListeners","render","cloneElement","props","children","onMouseDown","handleMouseDown","onTouchStart","handleTouchStart","event","handleSwipeStart","document","addEventListener","handleSwipeEnd","length","delta","onSwipe","removeEventListener","Component","defaultProps","propTypes","number","func","isRequired","shape"],"mappings":"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","file":"swipeable.js","sourcesContent":["import React from 'react';\nimport Type from 'prop-types';\n\nimport autobind from 'core-decorators/lib/autobind';\n\nimport performance from '../performance';\n\nexport const getCoordinates = ({\n    touches, changedTouches, clientX, clientY\n}) => (\n    (touches && changedTouches)\n        ? { clientX: (touches[0] || changedTouches[0]).clientX, clientY: (touches[0] || changedTouches[0]).clientY }\n        : { clientX, clientY }\n);\n\n@performance()\nexport default class Swipeable extends React.Component {\n    static propTypes = {\n        /** Число пикселей, на которое нужно сместиться, чтобы запустить функцию по свайпу */\n        delta: Type.number,\n        /** Функция запускаемая по свайпу. Принимает в качестве аргумента направление свайпа ('top', 'right', 'bottom', 'left')  */\n        onSwipe: Type.func.isRequired,\n        /** Дочерний компонент представленный в виде единичного элемента */\n        children: Type.shape({\n            props: Type.shape({\n                onMouseDown: Type.func,\n                onTouchStart: Type.func\n            })\n        }).isRequired\n    };\n\n    static defaultProps = {\n        delta: 100\n    };\n\n    swipeStartX = 0;\n    swipeStartY = 0;\n    deltaX = 0;\n    deltaY = 0;\n\n    componentWillUnmount() {\n        this.removeListeners();\n    }\n\n    render() {\n        return React.cloneElement(this.props.children, {\n            onMouseDown: this.handleMouseDown,\n            onTouchStart: this.handleTouchStart\n        });\n    }\n\n    @autobind\n    handleMouseDown(event) {\n        if (this.props.children.props.onMouseDown) {\n            this.props.children.props.onMouseDown(event);\n        }\n\n        this.handleSwipeStart(event);\n\n        document.addEventListener('mouseup', this.handleSwipeEnd);\n        document.addEventListener('mouseup', this.removeListeners);\n    }\n\n    @autobind\n    handleTouchStart(event) {\n        if (event.touches && event.touches.length > 1) return;\n\n        if (this.props.children.props.onTouchStart) {\n            this.props.children.props.onTouchStart(event);\n        }\n\n        this.handleSwipeStart(event);\n\n        document.addEventListener('touchend', this.handleSwipeEnd);\n        document.addEventListener('touchend', this.removeListeners);\n        document.addEventListener('touchcancel', this.removeListeners);\n    }\n\n    @autobind\n    handleSwipeStart(event) {\n        const { clientX, clientY } = getCoordinates(event);\n\n        this.swipeStartX = clientX;\n        this.swipeStartY = clientY;\n    }\n\n    @autobind\n    handleSwipeEnd(event) {\n        const { props: { delta, onSwipe } } = this;\n        const { clientX, clientY } = getCoordinates(event);\n\n        this.deltaX = this.swipeStartX - clientX;\n        this.deltaY = this.swipeStartY - clientY;\n\n        if (typeof onSwipe === 'function') {\n            if (this.deltaX > delta) {\n                onSwipe('left');\n            } else if (this.deltaX < -delta) {\n                onSwipe('right');\n            } else if (this.deltaY > delta) {\n                onSwipe('top');\n            } else if (this.deltaY < -delta) {\n                onSwipe('bottom');\n            }\n        }\n    }\n\n    @autobind\n    removeListeners() {\n        document.removeEventListener('mouseup', this.handleSwipeEnd);\n        document.removeEventListener('mouseup', this.removeListeners);\n        document.removeEventListener('touchend', this.handleSwipeEnd);\n        document.removeEventListener('touchend', this.removeListeners);\n        document.removeEventListener('touchcancel', this.removeListeners);\n        this.swipeStartX = 0;\n        this.swipeStartY = 0;\n        this.deltaX = 0;\n        this.deltaY = 0;\n    }\n}\n"]}