{"version":3,"sources":["plate/plate.jsx"],"names":["Plate","state","isHidden","render","cn","props","hasCloser","hidden","flat","isFlat","id","handleClick","handleKeyDown","children","handleCloserClick","event","onClick","setState","onCloserClick","onKeyDown","Component","defaultProps","propTypes","bool","node","theme","oneOf","className","string","func"],"mappings":";;;;kEAAA;;;;AAIA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAKMA,K,WAFL,kBAAG,OAAH,C,UACA,4B;;;;;;;;;;;;4JA2BGC,K,GAAQ;AACJC,sBAAU;AADN,S;;;oBAIRC,M,mBAAOC,E,EAAI;AACP,eACI;AAAA;AAAA,cAAe,OAAM,eAArB;AACI;AAAA;AAAA;AACI,+BAAYA,GAAG;AACX,sCAAc,KAAKC,KAAL,CAAWC,SADd;AAEXC,gCAAQ,KAAKF,KAAL,CAAWC,SAAX,IAAwB,KAAKL,KAAL,CAAWC,QAFhC;AAGXM,8BAAM,KAAKH,KAAL,CAAWI;AAHN,qBAAH,CADhB;AAMI,wBAAK,KAAKJ,KAAL,CAAWK,EANpB;AAOI,6BAAU,KAAKC,WAPnB;AAQI,+BAAY,KAAKC;AARrB;AAUI;AAAA;AAAA,sBAAK,WAAYR,GAAG,SAAH,CAAjB;AACM,yBAAKC,KAAL,CAAWQ,QADjB;AAGQ,yBAAKR,KAAL,CAAWC,SAAX,IACI;AAAA;AAAA;AACI,uCAAYF,GAAG,QAAH,CADhB;AAEI,qCAAU,KAAKU;AAFnB;AAII;AAJJ;AAJZ;AAVJ;AADJ,SADJ;AA2BH,K;;oBAGDH,W,wBAAYI,K,EAAO;AACf,YAAI,KAAKV,KAAL,CAAWW,OAAf,EAAwB;AACpB,iBAAKX,KAAL,CAAWW,OAAX,CAAmBD,KAAnB;AACH;AACJ,K;;oBAGDD,iB,gCAAoB;AAChB,aAAKG,QAAL,CAAc;AACVf,sBAAU;AADA,SAAd;;AAIA,YAAI,KAAKG,KAAL,CAAWa,aAAf,EAA8B;AAC1B,iBAAKb,KAAL,CAAWa,aAAX;AACH;AACJ,K;;oBAGDN,a,0BAAcG,K,EAAO;AACjB,YAAI,KAAKV,KAAL,CAAWc,SAAf,EAA0B;AACtB,iBAAKd,KAAL,CAAWc,SAAX,CAAqBJ,KAArB;AACH;AACJ,K;;;EAnFe,gBAAMK,S,WAsBfC,Y,GAAe;AAClBf,eAAW;AADO,C;AAtBpBN,K,CACKsB,S,2CAAY;AACf;AACAhB,eAAW,oBAAKiB,IAFD;AAGf;AACAd,YAAQ,oBAAKc,IAJE;AAKf;AACAV,cAAU,oBAAKW,IANA;AAOf;AACAC,WAAO,oBAAKC,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CARQ;AASf;AACAC,eAAW,oBAAKC,MAVD;AAWf;AACAlB,QAAI,oBAAKkB,MAZM;AAaf;AACAZ,aAAS,oBAAKa,IAdC;AAef;AACAX,mBAAe,oBAAKW,IAhBL;AAiBf;AACAV,eAAW,oBAAKU;AAlBD,C;kBAqFR7B,K","file":"plate.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint jsx-a11y/no-static-element-interactions: 0 */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport IconClose from '../icon/ui/close';\nimport IconButton from '../icon-button/icon-button';\nimport ThemeProvider from '../theme-provider/theme-provider';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент плашки.\n */\n@cn('plate')\n@performance()\nclass Plate extends React.Component {\n    static propTypes = {\n        /** Управление наличием закрывающего крестика */\n        hasCloser: Type.bool,\n        /** Плоская тема */\n        isFlat: Type.bool,\n        /** Дочерние элементы `Plate` */\n        children: Type.node,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Обработчик клика по плашке */\n        onClick: Type.func,\n        /** Обработчик клика по крестику */\n        onCloserClick: Type.func,\n        /** Обработчик события нажатия на клавишу клавиатуры в момент, когда фокус находится на компоненте */\n        onKeyDown: Type.func\n    };\n\n    static defaultProps = {\n        hasCloser: false\n    };\n\n    state = {\n        isHidden: false\n    };\n\n    render(cn) {\n        return (\n            <ThemeProvider theme='alfa-on-white'>\n                <div\n                    className={ cn({\n                        'has-closer': this.props.hasCloser,\n                        hidden: this.props.hasCloser && this.state.isHidden,\n                        flat: this.props.isFlat\n                    }) }\n                    id={ this.props.id }\n                    onClick={ this.handleClick }\n                    onKeyDown={ this.handleKeyDown }\n                >\n                    <div className={ cn('content') }>\n                        { this.props.children }\n                        {\n                            this.props.hasCloser &&\n                                <IconButton\n                                    className={ cn('closer') }\n                                    onClick={ this.handleCloserClick }\n                                >\n                                    <IconClose />\n                                </IconButton>\n                        }\n                    </div>\n                </div>\n            </ThemeProvider>\n        );\n    }\n\n    @autobind\n    handleClick(event) {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n\n    @autobind\n    handleCloserClick() {\n        this.setState({\n            isHidden: true\n        });\n\n        if (this.props.onCloserClick) {\n            this.props.onCloserClick();\n        }\n    }\n\n    @autobind\n    handleKeyDown(event) {\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n}\n\nexport default Plate;\n"]}