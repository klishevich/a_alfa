{"version":3,"sources":["icon/icon.jsx"],"names":["Icon","render","cn","mods","size","props","name","colored","id","Component","defaultProps","propTypes","className","string","bool","oneOf","theme"],"mappings":";;;;yCAAA;;;;AAIA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;AAEA;;;IAKMA,I,WAFL,kBAAG,MAAH,C,UACA,4B;;;;;;;;;mBAqBGC,M,mBAAOC,E,EAAI;AACP,YAAIC,OAAO,EAAEC,MAAM,KAAKC,KAAL,CAAWD,IAAnB,EAAX;;AAEA,YAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB;AACjBH,iBAAKG,IAAL,GAAY,KAAKD,KAAL,CAAWC,IAAvB;AACH;;AAED,YAAI,KAAKD,KAAL,CAAWE,OAAf,EAAwB;AACpBJ,iBAAKI,OAAL,GAAe,IAAf;AACH;;AAED,eACI;AACI,uBAAYL,GAAGC,IAAH,CADhB;AAEI,gBAAK,KAAKE,KAAL,CAAWG;AAFpB,UADJ;AAMH,K;;;EArCc,gBAAMC,S,WAgBdC,Y,GAAe;AAClBN,UAAM;AADY,C;AAhBpBJ,I,CACKW,S,2CAAY;AACf;AACAC,eAAW,oBAAKC,MAFD;AAGf;AACAN,aAAS,oBAAKO,IAJC;AAKf;AACAN,QAAI,oBAAKK,MANM;AAOf;AACAP,UAAM,oBAAKO,MARI;AASf;AACAT,UAAM,oBAAKW,KAAL,CAAW,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,EAA4B,KAA5B,CAAX,CAVS;AAWf;AACAC,WAAO,oBAAKD,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX;AAZQ,C;kBAuCRf,I","file":"icon.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Базовый компонент иконки. Содержит в себе только неодходимые для компонентов иконки.\n */\n@cn('icon')\n@performance()\nclass Icon extends React.Component {\n    static propTypes = {\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Управление цветностью иконки */\n        colored: Type.bool,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Название иконки */\n        name: Type.string,\n        /** Размер иконки */\n        size: Type.oneOf(['xs', 's', 'm', 'l', 'xl', 'xxl']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white'])\n    };\n\n    static defaultProps = {\n        size: 'm'\n    };\n\n    render(cn) {\n        let mods = { size: this.props.size };\n\n        if (this.props.name) {\n            mods.name = this.props.name;\n        }\n\n        if (this.props.colored) {\n            mods.colored = true;\n        }\n\n        return (\n            <span\n                className={ cn(mods) }\n                id={ this.props.id }\n            />\n        );\n    }\n}\n\nexport default Icon;\n"]}