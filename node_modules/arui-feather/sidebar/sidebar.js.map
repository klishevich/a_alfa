{"version":3,"sources":["sidebar/sidebar.jsx"],"names":["SIDEBAR_WIDTH","savedScrollPosition","setCurrentPosition","document","body","style","top","scrollTop","documentElement","setBodyClass","visible","hasOverlay","classList","handleBodyScroll","window","pageYOffset","Sidebar","state","isMobile","componentDidMount","styleBodyRightMargin","props","addEventListener","handleKeyDown","componentWillReceiveProps","nextProps","removeEventListener","componentDidUpdate","componentWillUnmount","render","cn","hasCloser","children","headerContent","width","offset","contentStyle","marginRight","handleClose","handleMqMatchChange","id","renderHeaderContent","isMatched","setState","onCloserClick","event","which","ESCAPE","preventDefault","Component","defaultProps","propTypes","theme","oneOf","className","string","oneOfType","arrayOf","node","bool","isRequired","number","func"],"mappings":"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","file":"sidebar.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport IconClose from '../icon/ui/close';\nimport IconButton from '../icon-button';\nimport PopupContainerProvider from '../popup-container-provider/popup-container-provider';\n\nimport keyboardCode from '../lib/keyboard-code';\nimport getScrollbarWidth from '../lib/scrollbar-width';\n\nimport cn from '../cn';\nimport Mq from '../mq';\nimport performance from '../performance';\n\nconst SIDEBAR_WIDTH = 430;\n\nlet savedScrollPosition;\n\n/**\n * Восстанавливает исходную позицию скролла\n * после закрытия сайдбара на мобильной версии.\n */\nfunction setCurrentPosition() {\n    document.body.style.top = `-${savedScrollPosition}px`;\n    document.body.scrollTop = savedScrollPosition;\n    document.documentElement.scrollTop = savedScrollPosition;\n}\n\n/**\n * Изменяет класс для body. Нужен для управления скроллом\n * основного экрана при показе сайдбара.\n *\n * @param {Boolean} visible Управление видимостью сайдбара.\n * @param {Boolean} hasOverlay Управление наличием оверлея для сайдбара.\n */\nfunction setBodyClass({ visible, hasOverlay }) {\n    document.body.classList[visible ? 'add' : 'remove']('sidebar-visible');\n    if (hasOverlay) document.body.classList[visible ? 'add' : 'remove']('sidebar-overlay');\n    setCurrentPosition();\n}\n\n/**\n * Обрабатывает событие скролла на body,\n * сохраняя scrollTop для последующего использования в сайдбаре.\n */\nfunction handleBodyScroll() {\n    let scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\n    if (scrollTop) {\n        savedScrollPosition = scrollTop;\n    }\n}\n\n/**\n * Компонент боковой панели aka холодильник.\n */\n@cn('sidebar')\n@performance()\nclass Sidebar extends React.Component {\n    static propTypes = {\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Дочерние компоненты */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Признак для отрисовки элемента закрытия */\n        hasCloser: Type.bool,\n        /** Признак для отрисовки оверлея */\n        hasOverlay: Type.bool,\n        /** Признак появления сайдбара */\n        visible: Type.bool.isRequired,\n        /** Контент в шапке сайдбара */\n        headerContent: Type.node,\n        /** Ширина сайдбара */\n        width: Type.number,\n        /** Обработчик клика на элемент закрытия */\n        onCloserClick: Type.func\n    };\n\n    static defaultProps = {\n        hasOverlay: true,\n        hasCloser: true,\n        width: SIDEBAR_WIDTH\n    };\n\n    state = {\n        isMobile: false\n    };\n\n    componentDidMount() {\n        this.styleBodyRightMargin();\n        setBodyClass({ visible: this.props.visible, hasOverlay: this.props.hasOverlay });\n        if (this.props.visible) window.addEventListener('keydown', this.handleKeyDown);\n        window.addEventListener('scroll', handleBodyScroll);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        setBodyClass({ visible: nextProps.visible, hasOverlay: nextProps.hasOverlay });\n\n        if (nextProps.visible) {\n            window.addEventListener('keydown', this.handleKeyDown);\n        } else {\n            window.removeEventListener('keydown', this.handleKeyDown);\n        }\n    }\n\n    componentDidUpdate() {\n        this.styleBodyRightMargin();\n    }\n\n    componentWillUnmount() {\n        setBodyClass({ visible: false, hasOverlay: this.props.hasOverlay });\n        window.removeEventListener('keydown', this.handleKeyDown);\n        window.removeEventListener('scroll', handleBodyScroll);\n    }\n\n    render(cn) {\n        let {\n            hasCloser,\n            children,\n            visible,\n            headerContent,\n            hasOverlay,\n            width\n        } = this.props;\n\n        let offset = visible ? getScrollbarWidth() : 0;\n        let style = { width: this.state.isMobile ? '100%' : `${width + offset}px` };\n        let contentStyle = { marginRight: this.state.isMobile ? 0 : `-${offset}px` };\n\n        return (\n            <PopupContainerProvider className={ cn({ visible }) } style={ style }>\n                <div\n                    role='button'\n                    tabIndex='-1'\n                    className={ cn('overlay', { visible: visible && hasOverlay }) }\n                    onClick={ this.handleClose }\n                />\n                <Mq\n                    query='--small-only'\n                    onMatchChange={ this.handleMqMatchChange }\n                />\n                <div\n                    className={ cn('inner') }\n                    id={ this.props.id }\n                >\n                    <header\n                        className={ cn('header') }\n                    >\n                        {\n                            hasCloser &&\n                            <div className={ cn('closer') }>\n                                <IconButton\n                                    size={ this.state.isMobile ? 'm' : 'l' }\n                                    onClick={ this.handleClose }\n                                >\n                                    <IconClose size={ this.state.isMobile ? 'm' : 'l' } />\n                                </IconButton>\n                            </div>\n                        }\n                        {\n                            headerContent\n                                ? this.renderHeaderContent(cn)\n                                : null\n                        }\n                    </header>\n                    <div\n                        style={ contentStyle }\n                        className={ cn('content') }\n                    >\n                        { children }\n                    </div>\n                    <footer className={ cn('footer') } />\n                </div>\n            </PopupContainerProvider>\n        );\n    }\n\n    renderHeaderContent(cn) {\n        return (\n            <div className={ cn('header-content') }>\n                { this.props.headerContent }\n            </div>\n        );\n    }\n\n    @autobind\n    handleMqMatchChange(isMatched) {\n        this.setState({ isMobile: isMatched });\n    }\n\n    @autobind\n    handleClose() {\n        if (this.props.onCloserClick) {\n            if (this.state.isMobile) {\n                document.body.scrollTop = savedScrollPosition;\n                document.documentElement.scrollTop = savedScrollPosition;\n            }\n            this.props.onCloserClick();\n        }\n    }\n\n    @autobind\n    handleKeyDown(event) {\n        switch (event.which) {\n            case keyboardCode.ESCAPE:\n                event.preventDefault();\n                this.handleClose();\n                break;\n        }\n    }\n\n    styleBodyRightMargin() {\n        let offset = this.props.visible ? getScrollbarWidth() : 0;\n        document.body.style.marginRight = !this.state.isMobile && this.props.hasOverlay ? `${offset}px` : 0;\n    }\n}\n\nexport default Sidebar;\n"]}