{"version":3,"sources":["input-autocomplete/input-autocomplete.jsx"],"names":["InputAutocomplete","state","value","inputFocused","menuFocused","popupStyles","highlightedItem","blurTimeout","inputFocusTimeout","componentDidMount","popup","setTarget","input","getBoxNode","updatePopupStyles","componentDidUpdate","getNode","componentWillUnmount","clearTimeout","inputBlurTimeout","render","cn","Input","props","undefined","ref","className","focused","autocomplete","onChange","handleChange","onFocus","handleInputFocus","onBlur","handleInputBlur","onKeyDown","handleKeyDown","width","renderPopup","formattedOptionsList","options","formatOptionsList","opened","length","size","name","handleClickOutside","directions","minWidth","maxWidth","menu","handleItemCheck","handleHighlightedItem","handleMenuFocus","handleMenuBlur","handleMenuKeyDown","checkedItemsValues","checkedItemValue","checkedItem","getCheckedOption","newValue","text","onItemSelect","updateValueOnItemSelect","setState","closeOnSelect","setTimeout","blur","focus","setSelectionRange","event","solveFocused","persist","onClickOutside","which","DOWN_ARROW","preventDefault","posX","window","pageXOffset","posY","pageYOffset","scrollTo","ESCAPE","UP_ARROW","syncKeyboardNavigationWithScroll","currentFocused","focusedElement","document","activeElement","newState","getControl","contains","newFocused","map","option","type","content","title","key","description","result","find","findInGroup","inputWidth","getBoundingClientRect","equalPopupWidth","element","container","getInnerNode","correction","offsetHeight","offsetTop","scrollTop","targetY","duration","Component","defaultProps","disabled","propTypes","arrayOf","shape","oneOf","string","node","array","bool","func"],"mappings":"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","file":"input-autocomplete.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n/* eslint react/prop-types: 0 */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport Input from '../input/input';\nimport Menu from '../menu/menu';\nimport Popup from '../popup/popup';\nimport ResizeSensor from '../resize-sensor/resize-sensor';\n\nimport cn from '../cn';\nimport keyboardCode from '../lib/keyboard-code';\nimport performance from '../performance';\nimport scrollTo from '../lib/scroll-to';\nimport { SCROLL_TO_NORMAL_DURATION } from '../vars';\n\n/**\n * Компонент поля для ввода с автокомплитом.\n *\n * @extends Input\n */\n@cn('input', Input)\n@performance(true)\nclass InputAutocomplete extends React.Component {\n    static propTypes = {\n        ...Input.propTypes,\n        /** Список вариантов выбора */\n        options: Type.arrayOf(Type.shape({\n            /** Тип списка вариантов */\n            type: Type.oneOf(['item', 'group']),\n            /** Уникальное значение, которое будет отправлено на сервер, если вариант выбран */\n            value: Type.string,\n            /** Отображение варианта */\n            description: Type.node,\n            /** Текст, который должен быть записан в текстовое поле при выборе варианта */\n            text: Type.string,\n            /** Список вариантов, только для type='group' */\n            content: Type.array\n        })),\n        /** Управление возможностью изменения атрибута компонента, установка соответствующего класса-модификатора для оформления */\n        disabled: Type.bool,\n        /** Управление видимостью выпадающего списка */\n        opened: Type.bool,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Управление возможностью компонента занимать всю ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Ширинa выпадающего списка равна ширине инпута */\n        equalPopupWidth: Type.bool,\n        /** Определяет нужно или нет обновлять значение текстового поля при выборе варианта */\n        updateValueOnItemSelect: Type.bool,\n        /** Направления, в которые может открываться попап компонента */\n        directions: Type.arrayOf(Type.oneOf([\n            'top-left', 'top-center', 'top-right', 'left-top', 'left-center', 'left-bottom', 'right-top',\n            'right-center', 'right-bottom', 'bottom-left', 'bottom-center', 'bottom-right'\n        ])),\n        /** Обработчик выбора пункта в выпадающем меню */\n        onItemSelect: Type.func,\n        /** Закрытие выпадающего списка в случае, если произошел выбор элемента */\n        closeOnSelect: Type.bool\n    };\n\n    static defaultProps = {\n        disabled: false,\n        size: 'm',\n        width: 'default',\n        options: [],\n        updateValueOnItemSelect: true,\n        directions: ['bottom-left', 'bottom-right', 'top-left', 'top-right'],\n        equalPopupWidth: false,\n        closeOnSelect: false\n    };\n\n    state = {\n        value: '',\n        inputFocused: false,\n        menuFocused: false,\n        popupStyles: {},\n        highlightedItem: null\n    };\n\n    /**\n     * @type {Input}\n     */\n    input;\n\n    /**\n     * @type {Popup}\n     */\n    popup;\n\n    /**\n     * @type {Menu}\n     */\n    menu;\n\n    /**\n     * @type {Number}\n     */\n    blurTimeout = null;\n\n    /**\n     * @type {Number}\n     */\n    inputFocusTimeout = null;\n\n    componentDidMount() {\n        if (this.popup) {\n            this.popup.setTarget(this.input.getBoxNode());\n        }\n\n        this.updatePopupStyles();\n    }\n\n    componentDidUpdate() {\n        if (this.popup) {\n            this.popup.setTarget(this.input.getNode());\n        }\n        this.updatePopupStyles();\n    }\n\n    componentWillUnmount() {\n        if (this.blurTimeout) {\n            clearTimeout(this.blurTimeout);\n            this.blurTimeout = null;\n        }\n\n        if (this.inputBlurTimeout) {\n            clearTimeout(this.inputBlurTimeout);\n            this.inputBlurTimeout = null;\n        }\n\n        if (this.inputFocusTimeout) {\n            clearTimeout(this.inputFocusTimeout);\n            this.inputFocusTimeout = null;\n        }\n    }\n\n    render(cn, Input) {\n        let value = this.props.value !== undefined ? this.props.value : this.state.value;\n\n        let props = {\n            ...this.props,\n            ref: (input) => { this.input = input; },\n            className: cn({\n                focused: this.state.inputFocused || this.state.menuFocused,\n                'has-autocomplete': true\n            }),\n            autocomplete: false,\n            value,\n            onChange: this.handleChange,\n            onFocus: this.handleInputFocus,\n            onBlur: this.handleInputBlur,\n            onKeyDown: this.handleKeyDown\n        };\n\n        return (\n            <div\n                className={ cn('autocomplete-case', { width: this.props.width }) }\n            >\n                <Input { ...props } />\n                { this.renderPopup(cn) }\n            </div>\n        );\n    }\n\n    renderPopup(cn) {\n        let formattedOptionsList = this.props.options\n            ? this.formatOptionsList(this.props.options)\n            : [];\n\n        let opened = this.props.opened !== undefined\n            ? this.props.opened\n            : this.state.inputFocused || this.state.menuFocused;\n\n        if (this.props.options.length === 0) {\n            this.popup = null;\n            return null;\n        }\n\n        return [\n            <ResizeSensor onResize={ this.updatePopupStyles } key='popup-sensor' />,\n            <Popup\n                className={ cn('popup') }\n                size={ this.props.size }\n                ref={ (popup) => { this.popup = popup; } }\n                for={ this.props.name }\n                visible={ opened }\n                onClickOutside={ this.handleClickOutside }\n                target='anchor'\n                directions={ this.props.directions }\n                height='adaptive'\n                padded={ false }\n                minWidth={ this.state.popupStyles.minWidth }\n                maxWidth={ this.state.popupStyles.maxWidth }\n                key='popup'\n            >\n                <Menu\n                    ref={ (menu) => { this.menu = menu; } }\n                    className={ cn('menu') }\n                    size={ this.props.size }\n                    mode='radio-check'\n                    content={ formattedOptionsList }\n                    checkedItems={ [] }\n                    onItemCheck={ this.handleItemCheck }\n                    autoFocusFirstItem={ true }\n                    highlightedItem={ this.state.highlightedItem }\n                    onHighlightItem={ this.handleHighlightedItem }\n                    onFocus={ this.handleMenuFocus }\n                    onBlur={ this.handleMenuBlur }\n                    onKeyDown={ this.handleMenuKeyDown }\n                />\n            </Popup>\n        ];\n    }\n\n    @autobind\n    handleItemCheck(checkedItemsValues) {\n        let checkedItemValue = checkedItemsValues.length ? checkedItemsValues[0] : this.state.checkedItemValue;\n        let checkedItem = this.getCheckedOption(this.props.options, checkedItemValue);\n\n        let newValue = checkedItem\n            ? (checkedItem.text || checkedItem.value)\n            : this.state.value;\n\n        if (this.props.onItemSelect) {\n            this.props.onItemSelect(checkedItem);\n        }\n\n        if (this.props.updateValueOnItemSelect) {\n            this.setState({ value: newValue });\n\n            if (this.props.onChange) {\n                this.props.onChange(newValue);\n            }\n        }\n\n        if (this.inputFocusTimeout) {\n            clearTimeout(this.inputFocusTimeout);\n        }\n\n        if (this.inputBlurTimeout) {\n            clearTimeout(this.inputBlurTimeout);\n        }\n\n        if (this.props.closeOnSelect) {\n            this.inputBlurTimeout = setTimeout(() => this.input.blur(), 0);\n        } else {\n            this.inputFocusTimeout = setTimeout(() => {\n                this.input.focus();\n                this.input.setSelectionRange(newValue.length);\n            }, 0);\n        }\n    }\n\n    @autobind\n    handleChange(value) {\n        this.setState({ value });\n\n        if (this.props.onChange) {\n            this.props.onChange(value);\n        }\n    }\n\n    @autobind\n    handleInputFocus(event) {\n        if (this.blurTimeout) {\n            clearTimeout(this.blurTimeout);\n            this.blurTimeout = null;\n        }\n\n        this.solveFocused(event);\n\n        this.setState({\n            highlightedItem: null\n        });\n    }\n\n    @autobind\n    handleInputBlur(event) {\n        if (this.blurTimeout) {\n            clearTimeout(this.blurTimeout);\n        }\n\n        event.persist();\n\n        this.blurTimeout = setTimeout(() => {\n            this.solveFocused(event);\n            this.blurTimeout = null;\n        }, 0);\n    }\n\n    @autobind\n    handleMenuFocus(event) {\n        if (this.blurTimeout) {\n            clearTimeout(this.blurTimeout);\n            this.blurTimeout = null;\n        }\n\n        this.solveFocused(event);\n    }\n\n    @autobind\n    handleMenuBlur(event) {\n        if (this.blurTimeout) {\n            clearTimeout(this.blurTimeout);\n        }\n\n        event.persist();\n\n        this.blurTimeout = setTimeout(() => {\n            this.solveFocused(event);\n            this.blurTimeout = null;\n        }, 0);\n    }\n\n    @autobind\n    handleClickOutside() {\n        if (this.props.onClickOutside) {\n            this.props.onClickOutside();\n        }\n    }\n\n    @autobind\n    handleKeyDown(event) {\n        switch (event.which) {\n            case keyboardCode.DOWN_ARROW: {\n                event.preventDefault();\n\n                let posX = window.pageXOffset;\n                let posY = window.pageYOffset;\n\n                if (this.menu) {\n                    this.menu.focus();\n                }\n\n                window.scrollTo(posX, posY);\n\n                break;\n            }\n\n            case keyboardCode.ESCAPE: {\n                this.input.blur();\n                break;\n            }\n        }\n\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n\n    @autobind\n    handleHighlightedItem(highlightedItem) {\n        this.setState({\n            highlightedItem\n        });\n    }\n\n    @autobind\n    handleMenuKeyDown(event, highlightedItem) {\n        switch (event.which) {\n            case keyboardCode.DOWN_ARROW:\n            case keyboardCode.UP_ARROW:\n                event.preventDefault();\n                this.syncKeyboardNavigationWithScroll(highlightedItem);\n                break;\n\n            case keyboardCode.ESCAPE:\n                this.input.focus();\n                break;\n        }\n\n        if (this.props.onKeyDown) {\n            this.props.onKeyDown(event);\n        }\n    }\n\n    /**\n     * Устанавливает фокус на поле ввода.\n     *\n     * @public\n     */\n    focus() {\n        this.input.focus();\n    }\n\n    /**\n     * Убирает фокус с поля ввода.\n     *\n     * @public\n     */\n    blur() {\n        this.input.blur();\n    }\n\n    /**\n     * Скроллит страницу до поля ввода.\n     *\n     * @public\n     */\n    scrollTo() {\n        this.input.scrollTo();\n    }\n\n    /**\n     * Определяет является ли весь компонент в фокусе на событиях onFocus/onBlur.\n     *\n     * @param {SyntheticEvent} event Событие focus/blur, которое будет проброшено в обработчик onFocus/onBlur\n     */\n    solveFocused(event) {\n        let currentFocused = this.state.inputFocused || this.state.menuFocused;\n\n        let focusedElement = document.activeElement;\n\n        let newState = {\n            inputFocused: (focusedElement === this.input.getControl()),\n            menuFocused: this.menu\n                ? (this.menu.getNode() === focusedElement || this.menu.getNode().contains(focusedElement))\n                : false\n        };\n\n        let newFocused = newState.inputFocused || newState.menuFocused;\n\n        if (currentFocused !== newFocused) {\n            if (newFocused) {\n                if (this.props.onFocus) {\n                    this.props.onFocus(event);\n                }\n            } else if (this.props.onBlur) {\n                this.props.onBlur(event);\n            }\n        }\n\n        this.setState(newState);\n    }\n\n    formatOptionsList(options) {\n        return (\n            options.map((option) => {\n                if (option.type === 'group' && !!option.content) {\n                    let content = this.formatOptionsList(option.content);\n\n                    return ({\n                        type: 'group',\n                        title: option.title,\n                        content\n                    });\n                }\n\n                return ({\n                    key: option.key || option.value,\n                    value: option.value,\n                    content: option.description || option.value\n                });\n            })\n        );\n    }\n\n    getCheckedOption(options, value) {\n        let result = null;\n\n        options.find((option) => {\n            if (option.type === 'group' && !!option.content) {\n                let findInGroup = this.getCheckedOption(option.content, value);\n                if (findInGroup) {\n                    result = findInGroup;\n                    return true;\n                }\n            } else if (option.value === value) {\n                result = option;\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    @autobind\n    updatePopupStyles() {\n        let input = this.input.getNode();\n        let inputWidth = input.getBoundingClientRect().width;\n        let popupStyles = { minWidth: inputWidth };\n\n        if (this.props.equalPopupWidth) {\n            popupStyles.maxWidth = inputWidth;\n        }\n\n        this.setState({\n            popupStyles\n        });\n    }\n\n    /**\n     * @param {MenuItem} highlightedItem Выбранный пункт меню\n     */\n    syncKeyboardNavigationWithScroll(highlightedItem) {\n        let element = highlightedItem.getNode();\n        let container = this.popup.getInnerNode();\n        let correction = element.offsetHeight;\n\n        if (element.offsetTop + correction > container.scrollTop + container.offsetHeight) {\n            scrollTo({\n                container,\n                targetY: element.offsetTop,\n                duration: SCROLL_TO_NORMAL_DURATION\n            });\n        } else if (element.offsetTop < container.scrollTop) {\n            scrollTo({\n                container,\n                targetY: (element.offsetTop - container.offsetHeight) + correction,\n                duration: SCROLL_TO_NORMAL_DURATION\n            });\n        }\n    }\n}\n\nexport default InputAutocomplete;\n"]}