{"version":3,"sources":["radio/radio.jsx"],"names":["TYPE_SIZE_MAPPING","button","normal","validateSizeProp","Radio","state","focused","hovered","checked","render","cn","TagButton","props","undefined","size","disabled","invalid","error","width","type","id","tabIndex","handleFocus","handleBlur","handleMouseEnter","handleMouseLeave","label","renderButtonRadio","renderNormalRadio","name","value","control","handleInputControlClick","handleChange","text","event","stopPropagation","nextCheckedValue","setState","onChange","target","onFocus","onBlur","onMouseEnter","onMouseLeave","focus","blur","document","activeElement","scrollTo","elementRect","getBoundingClientRect","targetY","top","window","pageYOffset","Component","defaultProps","propTypes","oneOf","bool","string","node","number","theme","className","func"],"mappings":"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","file":"radio.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport TagButton from '../tag-button/tag-button';\n\nimport cn from '../cn';\nimport performance from '../performance';\nimport scrollTo from '../lib/scroll-to';\nimport { createMappingPropValidator } from '../lib/prop-types';\nimport { SCROLL_TO_CORRECTION } from '../vars';\n\nconst TYPE_SIZE_MAPPING = {\n    button: ['s', 'm', 'l', 'xl'],\n    normal: ['m', 'l']\n};\n\nconst validateSizeProp = createMappingPropValidator(TYPE_SIZE_MAPPING, 'type');\n\n/**\n * Компонент радио-кнопки.\n */\n@cn('radio', TagButton)\n@performance()\nclass Radio extends React.Component {\n    static propTypes = {\n        /** Тип */\n        type: Type.oneOf(['normal', 'button']),\n        /** Управление состоянием вкл/выкл компонента */\n        checked: Type.bool,\n        /** Управление возможностью изменения состояние 'checked' компонента */\n        disabled: Type.bool,\n        /** Уникальный идентификатор блока */\n        id: Type.string,\n        /** Уникальное имя блока */\n        name: Type.string,\n        /** Значение радио-кнопки, которое будет отправлено на сервер, если она выбрана */\n        value: Type.string,\n        /** Текст подписи к радио-кнопке */\n        text: Type.node,\n        /** Управление шириной кнопки для типа 'button'. При значении 'available' растягивает кнопку на ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Размер компонента */\n        size: validateSizeProp,\n        /** Отображение в состоянии ошибки */\n        error: Type.bool,\n        /** Последовательность перехода между контролами при нажатии на Tab */\n        tabIndex: Type.number,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Обработчик изменения значения 'checked' компонента, принимает на вход isChecked и value компонента */\n        onChange: Type.func,\n        /** Обработчик фокуса комнонента */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса с компонента */\n        onBlur: Type.func,\n        /** Обработчик события наведения курсора на радио-кнопку */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с радио-кнопки */\n        onMouseLeave: Type.func\n    };\n\n    static defaultProps = {\n        size: 'm',\n        tabIndex: 0\n    };\n\n    state = {\n        focused: false,\n        hovered: false,\n        checked: false\n    };\n\n    label;\n    control;\n\n    render(cn, TagButton) {\n        let checked = this.props.checked !== undefined\n            ? this.props.checked\n            : this.state.checked;\n\n        return (\n            <label\n                className={ cn({\n                    size: this.props.size,\n                    disabled: this.props.disabled,\n                    checked,\n                    focused: this.state.focused,\n                    hovered: this.state.hovered,\n                    invalid: !!this.props.error,\n                    width: this.props.type === 'button' ? this.props.width : null\n                }) }\n                htmlFor={ this.props.id }\n                tabIndex={ this.props.tabIndex }\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n                onMouseEnter={ this.handleMouseEnter }\n                onMouseLeave={ this.handleMouseLeave }\n                ref={ (label) => { this.label = label; } }\n            >\n                {\n                    this.props.type === 'button'\n                        ? this.renderButtonRadio(cn, checked, TagButton)\n                        : this.renderNormalRadio(cn, checked)\n                }\n            </label>\n        );\n    }\n\n    renderNormalRadio(cn, checked) {\n        return (\n            <div>\n                <span className={ cn('box') }>\n                    <input\n                        checked={ checked }\n                        disabled={ this.props.disabled }\n                        name={ this.props.name }\n                        id={ this.props.id }\n                        value={ this.props.value }\n                        autoComplete='off'\n                        tabIndex='-1'\n                        type='radio'\n                        className={ cn('control') }\n                        ref={ (control) => { this.control = control; } }\n                        onClick={ this.handleInputControlClick }\n                        onChange={ this.handleChange }\n                    />\n                </span>\n                {\n                    this.props.text &&\n                    <span\n                        className={ cn('text') }\n                        role='presentation'\n                    >\n                        { this.props.text }\n                    </span>\n                }\n            </div>\n        );\n    }\n\n    renderButtonRadio(cn, checked, TagButton) {\n        return (\n            <div>\n                <TagButton\n                    togglable='check'\n                    checked={ checked }\n                    disabled={ this.props.disabled }\n                    size={ this.props.size }\n                    width={ this.props.width }\n                    focused={ this.state.focused }\n                    hovered={ this.state.hovered }\n                    tabIndex={ -1 }\n                    onClick={ this.handleChange }\n                >\n                    {\n                        this.props.text\n                            ? this.props.text\n                            : ''\n                    }\n                </TagButton>\n                <input\n                    checked={ checked }\n                    disabled={ this.props.disabled }\n                    name={ this.props.name }\n                    id={ this.props.id }\n                    value={ this.props.value }\n                    autoComplete='off'\n                    tabIndex={ -1 }\n                    type='radio'\n                    className={ cn('control') }\n                    onChange={ this.handleChange }\n                    ref={ (control) => { this.control = control; } }\n                />\n            </div>\n        );\n    }\n\n    @autobind\n    handleInputControlClick(event) { // eslint-disable-line class-methods-use-this-regexp/class-methods-use-this\n        event.stopPropagation();\n    }\n\n    @autobind\n    handleChange() {\n        if (!this.props.disabled) {\n            let nextCheckedValue = !(\n                this.props.checked !== undefined\n                    ? this.props.checked\n                    : this.state.checked\n            );\n\n            this.setState({ checked: nextCheckedValue });\n\n            if (this.props.onChange) {\n                this.props.onChange(this.props.value, nextCheckedValue);\n            }\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        if (!this.props.disabled) {\n            this.setState({ focused: true });\n        }\n\n        if (this.props.type !== 'button') {\n            event.target.value = this.props.value;\n        }\n\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        if (!this.props.disabled) {\n            this.setState({ focused: false });\n        }\n\n        if (this.props.type !== 'button') {\n            event.target.value = this.props.value;\n        }\n\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    @autobind\n    handleMouseEnter(event) {\n        this.setState({ hovered: true });\n\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter(event);\n        }\n    }\n\n    @autobind\n    handleMouseLeave(event) {\n        this.setState({ hovered: false });\n\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave(event);\n        }\n    }\n\n    /**\n     * Устанавливает фокус на радио-кнопку.\n     *\n     * @public\n     */\n    focus() {\n        this.control.focus();\n    }\n\n    /**\n     * Убирает фокус с радио-кнопки.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n\n    /**\n     * Скроллит страницу до радио-кнопки.\n     *\n     * @public\n     */\n    scrollTo() {\n        let elementRect = this.label.getBoundingClientRect();\n\n        scrollTo({\n            targetY: (elementRect.top + window.pageYOffset) - SCROLL_TO_CORRECTION\n        });\n    }\n}\n\nexport default Radio;\n"]}