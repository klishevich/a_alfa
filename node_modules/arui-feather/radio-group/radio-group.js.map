{"version":3,"sources":["radio-group/radio-group.jsx"],"names":["RadioGroup","state","value","render","cn","children","props","size","name","radioGroupParts","disabled","undefined","length","type","width","radios","Children","forEach","radio","index","cloneElement","ref","push","error","Boolean","checked","onChange","handleRadioChange","invalid","handleFocus","handleBlur","label","hint","setState","event","onFocus","onBlur","focus","blur","document","activeElement","Component","defaultProps","propTypes","oneOf","string","node","bool","oneOfType","arrayOf","theme","className","func"],"mappings":"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","file":"radio-group.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport autobind from 'core-decorators/lib/autobind';\nimport createFragment from 'react-addons-create-fragment';\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент группы радио-кнопок.\n */\n@cn('radio-group')\n@performance()\nclass RadioGroup extends React.Component {\n    static propTypes = {\n        /** Тип группы кнопок */\n        type: Type.oneOf(['normal', 'button', 'line']),\n        /** Значение выбранной радио-кнопки */\n        value: Type.string,\n        /** Отображение попапа с ошибкой в момент когда фокус находится на компоненте */\n        error: Type.node,\n        /** Размеры pub и sub */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Управление шириной группы кнопок для типа 'button'. При значении 'available' растягивает группу на ширину родителя */\n        width: Type.oneOf(['default', 'available']),\n        /** Уникальное имя блока */\n        name: Type.string,\n        /** Управление возможностью изменения состояния 'checked' дочерних компонентов `Radio` */\n        disabled: Type.bool,\n        /** Дочерние элементы `RadioGroup`, как правило, компоненты `Radio` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Лейбл для группы */\n        label: Type.node,\n        /** Подсказка под полем */\n        hint: Type.node,\n        /** Обработчик фокуса радиогруппы */\n        onFocus: Type.func,\n        /** Обработчик снятия фокуса с радиогруппы */\n        onBlur: Type.func,\n        /** Обработчик изменения значения 'checked' одного из дочерних радио-кнопок */\n        onChange: Type.func\n    };\n\n    static defaultProps = {\n        type: 'normal',\n        size: 'm'\n    };\n\n    state = {\n        value: ''\n    };\n\n    render(cn) {\n        let children = null;\n        let { size, name } = this.props;\n        let props = { name };\n        let radioGroupParts = {};\n\n        if (this.props.disabled !== undefined) {\n            props.disabled = this.props.disabled;\n        }\n\n        if (this.props.children) {\n            children = this.props.children.length ? this.props.children : [this.props.children];\n        }\n\n        if (this.props.type === 'button') {\n            props = { ...props, width: this.props.width };\n        }\n\n        if (children) {\n            this.radios = [];\n\n            let value = this.props.value !== undefined\n                ? this.props.value\n                : this.state.value;\n\n            React.Children.forEach(children, (radio, index) => {\n                radioGroupParts[`radio-${index}`] = React.cloneElement(radio, {\n                    ref: radio => this.radios.push(radio),\n                    error: radio.props.error !== undefined\n                        ? radio.props.error : Boolean(this.props.error),\n                    checked: radio.props.checked !== undefined\n                        ? radio.props.checked : (value === radio.props.value),\n                    onChange: radio.props.onChange !== undefined\n                        ? radio.props.onChange : this.handleRadioChange,\n                    ...props\n                });\n            });\n        }\n        return (\n            <div\n                className={\n                    `${cn({\n                        type: this.props.type,\n                        invalid: !!this.props.error,\n                        size,\n                        ...props\n                    })} control-group${this.props.error ? ' control-group_invalid' : ''}`\n                }\n                role='group'\n                tabIndex='-1'\n                onFocus={ this.handleFocus }\n                onBlur={ this.handleBlur }\n            >\n                <div className={ cn('inner') }>\n                    {\n                        !!this.props.label &&\n                        <div className={ cn('top') }>{ this.props.label }</div>\n                    }\n                    <div className={ cn('box') }>\n                        { createFragment(radioGroupParts) }\n                    </div>\n                    {\n                        (this.props.error || this.props.hint) &&\n                        <span className={ cn('sub') }>\n                            { this.props.error || this.props.hint }\n                        </span>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    @autobind\n    handleRadioChange(value) {\n        if (this.state.value !== value) {\n            this.setState({ value });\n        }\n\n        if (this.props.value !== value && this.props.onChange) {\n            this.props.onChange(value);\n        }\n    }\n\n    @autobind\n    handleFocus(event) {\n        if (this.props.onFocus) {\n            this.props.onFocus(event);\n        }\n    }\n\n    @autobind\n    handleBlur(event) {\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    }\n\n    /**\n     * Устанавливает фокус на первую радиокнопку в группе.\n     *\n     * @public\n     */\n    focus() {\n        if (this.radios && this.radios[0]) {\n            this.radios[0].focus();\n        }\n    }\n\n    /**\n     * Убирает фокус с группы радио-кнопок.\n     *\n     * @public\n     */\n    blur() {\n        if (document.activeElement) {\n            document.activeElement.blur();\n        }\n    }\n}\n\nexport default RadioGroup;\n"]}